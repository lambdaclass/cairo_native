searchState.loadedDescShard("cairo_native_run", 0, "Command line args parser. Exits with 1 if the compilation …\nAllows the compilation to succeed with warnings.\nIn cases where gas is available, the amount of provided …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nOptimization level, Valid: 0, 1, 2, 3. Values higher than …\nThe Cairo project path to compile and run its tests.\nRun with JIT or AOT (compiled).\nWhether path is a single file.\nFind the function ending with <code>name_suffix</code> in the program.\nFormats the given felts as a panic string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a JIT value to a felt.\nConvert the execution result to a run result.\nThe result of a ran test.\nThe status of a ran test.\nSummary data of the ran tests.\nDisplay the summary of the ran tests.\nFilter compiled test cases with user provided arguments.\nFind all testable targets in the Scarb package.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe gas usage of the run if relevant.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRuns the tests and process the results for a summary.\nThe status of the run.")