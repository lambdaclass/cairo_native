type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type Tuple<core::bool, core::bool, core::bool, core::bool> = Struct<ut@Tuple, core::bool, core::bool, core::bool, core::bool>;

libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc store_temp<core::bool> = store_temp<core::bool>;
libfunc bool_and_impl = bool_and_impl;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc struct_construct<Tuple<core::bool, core::bool, core::bool, core::bool>> = struct_construct<Tuple<core::bool, core::bool, core::bool, core::bool>>;
libfunc store_temp<Tuple<core::bool, core::bool, core::bool, core::bool>> = store_temp<Tuple<core::bool, core::bool, core::bool, core::bool>>;

struct_construct<Unit>() -> ([0]);
enum_init<core::bool, 1>([0]) -> ([1]);
struct_construct<Unit>() -> ([2]);
enum_init<core::bool, 1>([2]) -> ([3]);
store_temp<core::bool>([1]) -> ([1]);
store_temp<core::bool>([3]) -> ([3]);
bool_and_impl([1], [3]) -> ([4]);
struct_construct<Unit>() -> ([5]);
enum_init<core::bool, 1>([5]) -> ([6]);
struct_construct<Unit>() -> ([7]);
enum_init<core::bool, 0>([7]) -> ([8]);
store_temp<core::bool>([6]) -> ([6]);
store_temp<core::bool>([8]) -> ([8]);
bool_and_impl([6], [8]) -> ([9]);
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 0>([10]) -> ([11]);
struct_construct<Unit>() -> ([12]);
enum_init<core::bool, 1>([12]) -> ([13]);
store_temp<core::bool>([11]) -> ([11]);
store_temp<core::bool>([13]) -> ([13]);
bool_and_impl([11], [13]) -> ([14]);
struct_construct<Unit>() -> ([15]);
enum_init<core::bool, 0>([15]) -> ([16]);
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 0>([17]) -> ([18]);
store_temp<core::bool>([16]) -> ([16]);
store_temp<core::bool>([18]) -> ([18]);
bool_and_impl([16], [18]) -> ([19]);
struct_construct<Tuple<core::bool, core::bool, core::bool, core::bool>>([4], [9], [14], [19]) -> ([20]);
store_temp<Tuple<core::bool, core::bool, core::bool, core::bool>>([20]) -> ([21]);
return([21]);

and::and::main@0() -> (Tuple<core::bool, core::bool, core::bool, core::bool>);
