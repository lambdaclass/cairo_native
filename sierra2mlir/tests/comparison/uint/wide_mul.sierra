type u8 = u8;
type u16 = u16;
type u32 = u32;
type u64 = u64;
type u128 = u128;
type RangeCheck = RangeCheck;
type Tuple<u128, u128> = Struct<ut@Tuple, u128, u128>;
type Tuple<u16, u16, u16, u16, u16, u16, u16, u16, u16, u32, u32, u32, u32, u32, u32, u32, u32, u32, u64, u64, u64, u64, u64, u64, u64, u64, u64, u128, u128, u128, u128, u128, u128, u128, u128, u128, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>> = Struct<ut@Tuple, u16, u16, u16, u16, u16, u16, u16, u16, u16, u32, u32, u32, u32, u32, u32, u32, u32, u32, u64, u64, u64, u64, u64, u64, u64, u64, u64, u128, u128, u128, u128, u128, u128, u128, u128, u128, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>>;

libfunc u8_const<0> = u8_const<0>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc u8_wide_mul = u8_wide_mul;
libfunc u8_const<10> = u8_const<10>;
libfunc u8_const<255> = u8_const<255>;
libfunc u16_const<0> = u16_const<0>;
libfunc store_temp<u16> = store_temp<u16>;
libfunc u16_wide_mul = u16_wide_mul;
libfunc u16_const<1000> = u16_const<1000>;
libfunc u16_const<65535> = u16_const<65535>;
libfunc u16_const<10> = u16_const<10>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc u32_wide_mul = u32_wide_mul;
libfunc u32_const<100000> = u32_const<100000>;
libfunc u32_const<4294967295> = u32_const<4294967295>;
libfunc u32_const<10> = u32_const<10>;
libfunc u64_const<0> = u64_const<0>;
libfunc store_temp<u64> = store_temp<u64>;
libfunc u64_wide_mul = u64_wide_mul;
libfunc u64_const<10000000000> = u64_const<10000000000>;
libfunc u64_const<18446744073709551615> = u64_const<18446744073709551615>;
libfunc u64_const<10> = u64_const<10>;
libfunc u128_const<0> = u128_const<0>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc u128_wide_mul = u128_wide_mul;
libfunc u128_const<100000000000000000000> = u128_const<100000000000000000000>;
libfunc u128_const<340282366920938463463374607431768211455> = u128_const<340282366920938463463374607431768211455>;
libfunc u128_const<10> = u128_const<10>;
libfunc struct_construct<Tuple<u128, u128>> = struct_construct<Tuple<u128, u128>>;
libfunc struct_construct<Tuple<u16, u16, u16, u16, u16, u16, u16, u16, u16, u32, u32, u32, u32, u32, u32, u32, u32, u32, u64, u64, u64, u64, u64, u64, u64, u64, u64, u128, u128, u128, u128, u128, u128, u128, u128, u128, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>>> = struct_construct<Tuple<u16, u16, u16, u16, u16, u16, u16, u16, u16, u32, u32, u32, u32, u32, u32, u32, u32, u32, u64, u64, u64, u64, u64, u64, u64, u64, u64, u128, u128, u128, u128, u128, u128, u128, u128, u128, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>>>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<Tuple<u16, u16, u16, u16, u16, u16, u16, u16, u16, u32, u32, u32, u32, u32, u32, u32, u32, u32, u64, u64, u64, u64, u64, u64, u64, u64, u64, u128, u128, u128, u128, u128, u128, u128, u128, u128, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>>> = store_temp<Tuple<u16, u16, u16, u16, u16, u16, u16, u16, u16, u32, u32, u32, u32, u32, u32, u32, u32, u32, u64, u64, u64, u64, u64, u64, u64, u64, u64, u128, u128, u128, u128, u128, u128, u128, u128, u128, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>>>;

u8_const<0>() -> ([1]);
u8_const<0>() -> ([2]);
store_temp<u8>([1]) -> ([1]);
u8_wide_mul([1], [2]) -> ([3]);
u8_const<0>() -> ([4]);
u8_const<10>() -> ([5]);
store_temp<u8>([4]) -> ([4]);
u8_wide_mul([4], [5]) -> ([6]);
u8_const<0>() -> ([7]);
u8_const<255>() -> ([8]);
store_temp<u8>([7]) -> ([7]);
u8_wide_mul([7], [8]) -> ([9]);
u8_const<10>() -> ([10]);
u8_const<0>() -> ([11]);
store_temp<u8>([10]) -> ([10]);
u8_wide_mul([10], [11]) -> ([12]);
u8_const<10>() -> ([13]);
u8_const<10>() -> ([14]);
store_temp<u8>([13]) -> ([13]);
u8_wide_mul([13], [14]) -> ([15]);
u8_const<10>() -> ([16]);
u8_const<255>() -> ([17]);
store_temp<u8>([16]) -> ([16]);
u8_wide_mul([16], [17]) -> ([18]);
u8_const<255>() -> ([19]);
u8_const<0>() -> ([20]);
store_temp<u8>([19]) -> ([19]);
u8_wide_mul([19], [20]) -> ([21]);
u8_const<255>() -> ([22]);
u8_const<10>() -> ([23]);
store_temp<u8>([22]) -> ([22]);
u8_wide_mul([22], [23]) -> ([24]);
u8_const<255>() -> ([25]);
u8_const<255>() -> ([26]);
store_temp<u8>([25]) -> ([25]);
u8_wide_mul([25], [26]) -> ([27]);
u16_const<0>() -> ([28]);
u16_const<0>() -> ([29]);
store_temp<u16>([28]) -> ([28]);
u16_wide_mul([28], [29]) -> ([30]);
u16_const<0>() -> ([31]);
u16_const<1000>() -> ([32]);
store_temp<u16>([31]) -> ([31]);
u16_wide_mul([31], [32]) -> ([33]);
u16_const<0>() -> ([34]);
u16_const<65535>() -> ([35]);
store_temp<u16>([34]) -> ([34]);
u16_wide_mul([34], [35]) -> ([36]);
u16_const<1000>() -> ([37]);
u16_const<0>() -> ([38]);
store_temp<u16>([37]) -> ([37]);
u16_wide_mul([37], [38]) -> ([39]);
u16_const<1000>() -> ([40]);
u16_const<1000>() -> ([41]);
store_temp<u16>([40]) -> ([40]);
u16_wide_mul([40], [41]) -> ([42]);
u16_const<1000>() -> ([43]);
u16_const<65535>() -> ([44]);
store_temp<u16>([43]) -> ([43]);
u16_wide_mul([43], [44]) -> ([45]);
u16_const<65535>() -> ([46]);
u16_const<0>() -> ([47]);
store_temp<u16>([46]) -> ([46]);
u16_wide_mul([46], [47]) -> ([48]);
u16_const<65535>() -> ([49]);
u16_const<10>() -> ([50]);
store_temp<u16>([49]) -> ([49]);
u16_wide_mul([49], [50]) -> ([51]);
u16_const<65535>() -> ([52]);
u16_const<65535>() -> ([53]);
store_temp<u16>([52]) -> ([52]);
u16_wide_mul([52], [53]) -> ([54]);
u32_const<0>() -> ([55]);
u32_const<0>() -> ([56]);
store_temp<u32>([55]) -> ([55]);
u32_wide_mul([55], [56]) -> ([57]);
u32_const<0>() -> ([58]);
u32_const<100000>() -> ([59]);
store_temp<u32>([58]) -> ([58]);
u32_wide_mul([58], [59]) -> ([60]);
u32_const<0>() -> ([61]);
u32_const<4294967295>() -> ([62]);
store_temp<u32>([61]) -> ([61]);
u32_wide_mul([61], [62]) -> ([63]);
u32_const<100000>() -> ([64]);
u32_const<0>() -> ([65]);
store_temp<u32>([64]) -> ([64]);
u32_wide_mul([64], [65]) -> ([66]);
u32_const<100000>() -> ([67]);
u32_const<100000>() -> ([68]);
store_temp<u32>([67]) -> ([67]);
u32_wide_mul([67], [68]) -> ([69]);
u32_const<100000>() -> ([70]);
u32_const<4294967295>() -> ([71]);
store_temp<u32>([70]) -> ([70]);
u32_wide_mul([70], [71]) -> ([72]);
u32_const<4294967295>() -> ([73]);
u32_const<0>() -> ([74]);
store_temp<u32>([73]) -> ([73]);
u32_wide_mul([73], [74]) -> ([75]);
u32_const<4294967295>() -> ([76]);
u32_const<10>() -> ([77]);
store_temp<u32>([76]) -> ([76]);
u32_wide_mul([76], [77]) -> ([78]);
u32_const<4294967295>() -> ([79]);
u32_const<4294967295>() -> ([80]);
store_temp<u32>([79]) -> ([79]);
u32_wide_mul([79], [80]) -> ([81]);
u64_const<0>() -> ([82]);
u64_const<0>() -> ([83]);
store_temp<u64>([82]) -> ([82]);
u64_wide_mul([82], [83]) -> ([84]);
u64_const<0>() -> ([85]);
u64_const<10000000000>() -> ([86]);
store_temp<u64>([85]) -> ([85]);
u64_wide_mul([85], [86]) -> ([87]);
u64_const<0>() -> ([88]);
u64_const<18446744073709551615>() -> ([89]);
store_temp<u64>([88]) -> ([88]);
u64_wide_mul([88], [89]) -> ([90]);
u64_const<10000000000>() -> ([91]);
u64_const<0>() -> ([92]);
store_temp<u64>([91]) -> ([91]);
u64_wide_mul([91], [92]) -> ([93]);
u64_const<10000000000>() -> ([94]);
u64_const<10000000000>() -> ([95]);
store_temp<u64>([94]) -> ([94]);
u64_wide_mul([94], [95]) -> ([96]);
u64_const<10000000000>() -> ([97]);
u64_const<18446744073709551615>() -> ([98]);
store_temp<u64>([97]) -> ([97]);
u64_wide_mul([97], [98]) -> ([99]);
u64_const<18446744073709551615>() -> ([100]);
u64_const<0>() -> ([101]);
store_temp<u64>([100]) -> ([100]);
u64_wide_mul([100], [101]) -> ([102]);
u64_const<18446744073709551615>() -> ([103]);
u64_const<10>() -> ([104]);
store_temp<u64>([103]) -> ([103]);
u64_wide_mul([103], [104]) -> ([105]);
u64_const<18446744073709551615>() -> ([106]);
u64_const<18446744073709551615>() -> ([107]);
store_temp<u64>([106]) -> ([106]);
u64_wide_mul([106], [107]) -> ([108]);
u128_const<0>() -> ([109]);
u128_const<0>() -> ([110]);
store_temp<u128>([109]) -> ([109]);
store_temp<u128>([110]) -> ([110]);
u128_wide_mul([0], [109], [110]) -> ([111], [112], [113]);
u128_const<0>() -> ([114]);
u128_const<100000000000000000000>() -> ([115]);
store_temp<u128>([114]) -> ([114]);
store_temp<u128>([115]) -> ([115]);
u128_wide_mul([111], [114], [115]) -> ([116], [117], [118]);
u128_const<0>() -> ([119]);
u128_const<340282366920938463463374607431768211455>() -> ([120]);
store_temp<u128>([119]) -> ([119]);
store_temp<u128>([120]) -> ([120]);
u128_wide_mul([116], [119], [120]) -> ([121], [122], [123]);
u128_const<100000000000000000000>() -> ([124]);
u128_const<0>() -> ([125]);
store_temp<u128>([124]) -> ([124]);
store_temp<u128>([125]) -> ([125]);
u128_wide_mul([121], [124], [125]) -> ([126], [127], [128]);
u128_const<100000000000000000000>() -> ([129]);
u128_const<100000000000000000000>() -> ([130]);
store_temp<u128>([129]) -> ([129]);
store_temp<u128>([130]) -> ([130]);
u128_wide_mul([126], [129], [130]) -> ([131], [132], [133]);
u128_const<100000000000000000000>() -> ([134]);
u128_const<340282366920938463463374607431768211455>() -> ([135]);
store_temp<u128>([134]) -> ([134]);
store_temp<u128>([135]) -> ([135]);
u128_wide_mul([131], [134], [135]) -> ([136], [137], [138]);
u128_const<340282366920938463463374607431768211455>() -> ([139]);
u128_const<0>() -> ([140]);
store_temp<u128>([139]) -> ([139]);
store_temp<u128>([140]) -> ([140]);
u128_wide_mul([136], [139], [140]) -> ([141], [142], [143]);
u128_const<340282366920938463463374607431768211455>() -> ([144]);
u128_const<10>() -> ([145]);
store_temp<u128>([144]) -> ([144]);
store_temp<u128>([145]) -> ([145]);
u128_wide_mul([141], [144], [145]) -> ([146], [147], [148]);
u128_const<340282366920938463463374607431768211455>() -> ([149]);
u128_const<340282366920938463463374607431768211455>() -> ([150]);
store_temp<u128>([149]) -> ([149]);
store_temp<u128>([150]) -> ([150]);
u128_wide_mul([146], [149], [150]) -> ([151], [152], [153]);
struct_construct<Tuple<u128, u128>>([112], [113]) -> ([154]);
struct_construct<Tuple<u128, u128>>([117], [118]) -> ([155]);
struct_construct<Tuple<u128, u128>>([122], [123]) -> ([156]);
struct_construct<Tuple<u128, u128>>([127], [128]) -> ([157]);
struct_construct<Tuple<u128, u128>>([132], [133]) -> ([158]);
struct_construct<Tuple<u128, u128>>([137], [138]) -> ([159]);
struct_construct<Tuple<u128, u128>>([142], [143]) -> ([160]);
struct_construct<Tuple<u128, u128>>([147], [148]) -> ([161]);
struct_construct<Tuple<u128, u128>>([152], [153]) -> ([162]);
struct_construct<Tuple<u16, u16, u16, u16, u16, u16, u16, u16, u16, u32, u32, u32, u32, u32, u32, u32, u32, u32, u64, u64, u64, u64, u64, u64, u64, u64, u64, u128, u128, u128, u128, u128, u128, u128, u128, u128, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>>>([3], [6], [9], [12], [15], [18], [21], [24], [27], [30], [33], [36], [39], [42], [45], [48], [51], [54], [57], [60], [63], [66], [69], [72], [75], [78], [81], [84], [87], [90], [93], [96], [99], [102], [105], [108], [154], [155], [156], [157], [158], [159], [160], [161], [162]) -> ([163]);
store_temp<RangeCheck>([151]) -> ([164]);
store_temp<Tuple<u16, u16, u16, u16, u16, u16, u16, u16, u16, u32, u32, u32, u32, u32, u32, u32, u32, u32, u64, u64, u64, u64, u64, u64, u64, u64, u64, u128, u128, u128, u128, u128, u128, u128, u128, u128, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>>>([163]) -> ([165]);
return([164], [165]);

wide_mul::wide_mul::main@0([0]: RangeCheck) -> (RangeCheck, Tuple<u16, u16, u16, u16, u16, u16, u16, u16, u16, u32, u32, u32, u32, u32, u32, u32, u32, u32, u64, u64, u64, u64, u64, u64, u64, u64, u64, u128, u128, u128, u128, u128, u128, u128, u128, u128, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>, Tuple<u128, u128>>);
