type u8 = u8;
type RangeCheck = RangeCheck;
type Unit = Struct<ut@Tuple>;
type core::bool = Enum<ut@core::bool, Unit, Unit>;
type Tuple<u8, u8, core::bool> = Struct<ut@Tuple, u8, u8, core::bool>;
type u16 = u16;
type Tuple<u16, u16, core::bool> = Struct<ut@Tuple, u16, u16, core::bool>;
type u32 = u32;
type Tuple<u32, u32, core::bool> = Struct<ut@Tuple, u32, u32, core::bool>;
type u64 = u64;
type Tuple<u64, u64, core::bool> = Struct<ut@Tuple, u64, u64, core::bool>;
type u128 = u128;
type Tuple<u128, u128, core::bool> = Struct<ut@Tuple, u128, u128, core::bool>;
type Tuple<Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>> = Struct<ut@Tuple, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>>;
type NonZero<u8> = NonZero<u8>;
type core::option::Option::<core::NonZero::<core::integer::u8>> = Enum<ut@core::option::Option::<core::NonZero::<core::integer::u8>>, NonZero<u8>, Unit>;
type NonZero<u16> = NonZero<u16>;
type core::option::Option::<core::NonZero::<core::integer::u16>> = Enum<ut@core::option::Option::<core::NonZero::<core::integer::u16>>, NonZero<u16>, Unit>;
type NonZero<u32> = NonZero<u32>;
type core::option::Option::<core::NonZero::<core::integer::u32>> = Enum<ut@core::option::Option::<core::NonZero::<core::integer::u32>>, NonZero<u32>, Unit>;
type NonZero<u64> = NonZero<u64>;
type core::option::Option::<core::NonZero::<core::integer::u64>> = Enum<ut@core::option::Option::<core::NonZero::<core::integer::u64>>, NonZero<u64>, Unit>;
type NonZero<u128> = NonZero<u128>;
type core::option::Option::<core::NonZero::<core::integer::u128>> = Enum<ut@core::option::Option::<core::NonZero::<core::integer::u128>>, NonZero<u128>, Unit>;

libfunc u8_const<0> = u8_const<0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc function_call<user@safe_divmod::safe_divmod::u8_divmod> = function_call<user@safe_divmod::safe_divmod::u8_divmod>;
libfunc u8_const<10> = u8_const<10>;
libfunc u8_const<255> = u8_const<255>;
libfunc u16_const<0> = u16_const<0>;
libfunc store_temp<u16> = store_temp<u16>;
libfunc function_call<user@safe_divmod::safe_divmod::u16_divmod> = function_call<user@safe_divmod::safe_divmod::u16_divmod>;
libfunc u16_const<1000> = u16_const<1000>;
libfunc u16_const<65535> = u16_const<65535>;
libfunc u16_const<10> = u16_const<10>;
libfunc u32_const<0> = u32_const<0>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc function_call<user@safe_divmod::safe_divmod::u32_divmod> = function_call<user@safe_divmod::safe_divmod::u32_divmod>;
libfunc u32_const<100000> = u32_const<100000>;
libfunc u32_const<4294967295> = u32_const<4294967295>;
libfunc u32_const<10> = u32_const<10>;
libfunc u64_const<0> = u64_const<0>;
libfunc store_temp<u64> = store_temp<u64>;
libfunc function_call<user@safe_divmod::safe_divmod::u64_divmod> = function_call<user@safe_divmod::safe_divmod::u64_divmod>;
libfunc u64_const<10000000000> = u64_const<10000000000>;
libfunc u64_const<18446744073709551615> = u64_const<18446744073709551615>;
libfunc u64_const<10> = u64_const<10>;
libfunc u128_const<0> = u128_const<0>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc function_call<user@safe_divmod::safe_divmod::u128_divmod> = function_call<user@safe_divmod::safe_divmod::u128_divmod>;
libfunc u128_const<100000000000000000000> = u128_const<100000000000000000000>;
libfunc u128_const<340282366920938463463374607431768211455> = u128_const<340282366920938463463374607431768211455>;
libfunc u128_const<10> = u128_const<10>;
libfunc struct_construct<Tuple<Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>>> = struct_construct<Tuple<Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>>>;
libfunc store_temp<Tuple<Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>>> = store_temp<Tuple<Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>>>;
libfunc function_call<user@core::integer::u8_try_as_non_zero> = function_call<user@core::integer::u8_try_as_non_zero>;
libfunc enum_match<core::option::Option::<core::NonZero::<core::integer::u8>>> = enum_match<core::option::Option::<core::NonZero::<core::integer::u8>>>;
libfunc branch_align = branch_align;
libfunc u8_safe_divmod = u8_safe_divmod;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::bool, 1> = enum_init<core::bool, 1>;
libfunc struct_construct<Tuple<u8, u8, core::bool>> = struct_construct<Tuple<u8, u8, core::bool>>;
libfunc store_temp<Tuple<u8, u8, core::bool>> = store_temp<Tuple<u8, u8, core::bool>>;
libfunc jump = jump;
libfunc drop<u8> = drop<u8>;
libfunc struct_deconstruct<Unit> = struct_deconstruct<Unit>;
libfunc enum_init<core::bool, 0> = enum_init<core::bool, 0>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc rename<Tuple<u8, u8, core::bool>> = rename<Tuple<u8, u8, core::bool>>;
libfunc function_call<user@core::integer::u16_try_as_non_zero> = function_call<user@core::integer::u16_try_as_non_zero>;
libfunc enum_match<core::option::Option::<core::NonZero::<core::integer::u16>>> = enum_match<core::option::Option::<core::NonZero::<core::integer::u16>>>;
libfunc u16_safe_divmod = u16_safe_divmod;
libfunc struct_construct<Tuple<u16, u16, core::bool>> = struct_construct<Tuple<u16, u16, core::bool>>;
libfunc store_temp<Tuple<u16, u16, core::bool>> = store_temp<Tuple<u16, u16, core::bool>>;
libfunc drop<u16> = drop<u16>;
libfunc rename<Tuple<u16, u16, core::bool>> = rename<Tuple<u16, u16, core::bool>>;
libfunc function_call<user@core::integer::u32_try_as_non_zero> = function_call<user@core::integer::u32_try_as_non_zero>;
libfunc enum_match<core::option::Option::<core::NonZero::<core::integer::u32>>> = enum_match<core::option::Option::<core::NonZero::<core::integer::u32>>>;
libfunc u32_safe_divmod = u32_safe_divmod;
libfunc struct_construct<Tuple<u32, u32, core::bool>> = struct_construct<Tuple<u32, u32, core::bool>>;
libfunc store_temp<Tuple<u32, u32, core::bool>> = store_temp<Tuple<u32, u32, core::bool>>;
libfunc drop<u32> = drop<u32>;
libfunc rename<Tuple<u32, u32, core::bool>> = rename<Tuple<u32, u32, core::bool>>;
libfunc function_call<user@core::integer::u64_try_as_non_zero> = function_call<user@core::integer::u64_try_as_non_zero>;
libfunc enum_match<core::option::Option::<core::NonZero::<core::integer::u64>>> = enum_match<core::option::Option::<core::NonZero::<core::integer::u64>>>;
libfunc u64_safe_divmod = u64_safe_divmod;
libfunc struct_construct<Tuple<u64, u64, core::bool>> = struct_construct<Tuple<u64, u64, core::bool>>;
libfunc store_temp<Tuple<u64, u64, core::bool>> = store_temp<Tuple<u64, u64, core::bool>>;
libfunc drop<u64> = drop<u64>;
libfunc rename<Tuple<u64, u64, core::bool>> = rename<Tuple<u64, u64, core::bool>>;
libfunc function_call<user@core::integer::u128_try_as_non_zero> = function_call<user@core::integer::u128_try_as_non_zero>;
libfunc enum_match<core::option::Option::<core::NonZero::<core::integer::u128>>> = enum_match<core::option::Option::<core::NonZero::<core::integer::u128>>>;
libfunc u128_safe_divmod = u128_safe_divmod;
libfunc struct_construct<Tuple<u128, u128, core::bool>> = struct_construct<Tuple<u128, u128, core::bool>>;
libfunc store_temp<Tuple<u128, u128, core::bool>> = store_temp<Tuple<u128, u128, core::bool>>;
libfunc drop<u128> = drop<u128>;
libfunc rename<Tuple<u128, u128, core::bool>> = rename<Tuple<u128, u128, core::bool>>;
libfunc u8_is_zero = u8_is_zero;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u8>>, 1> = enum_init<core::option::Option::<core::NonZero::<core::integer::u8>>, 1>;
libfunc store_temp<core::option::Option::<core::NonZero::<core::integer::u8>>> = store_temp<core::option::Option::<core::NonZero::<core::integer::u8>>>;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u8>>, 0> = enum_init<core::option::Option::<core::NonZero::<core::integer::u8>>, 0>;
libfunc rename<core::option::Option::<core::NonZero::<core::integer::u8>>> = rename<core::option::Option::<core::NonZero::<core::integer::u8>>>;
libfunc u16_is_zero = u16_is_zero;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u16>>, 1> = enum_init<core::option::Option::<core::NonZero::<core::integer::u16>>, 1>;
libfunc store_temp<core::option::Option::<core::NonZero::<core::integer::u16>>> = store_temp<core::option::Option::<core::NonZero::<core::integer::u16>>>;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u16>>, 0> = enum_init<core::option::Option::<core::NonZero::<core::integer::u16>>, 0>;
libfunc rename<core::option::Option::<core::NonZero::<core::integer::u16>>> = rename<core::option::Option::<core::NonZero::<core::integer::u16>>>;
libfunc u32_is_zero = u32_is_zero;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u32>>, 1> = enum_init<core::option::Option::<core::NonZero::<core::integer::u32>>, 1>;
libfunc store_temp<core::option::Option::<core::NonZero::<core::integer::u32>>> = store_temp<core::option::Option::<core::NonZero::<core::integer::u32>>>;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u32>>, 0> = enum_init<core::option::Option::<core::NonZero::<core::integer::u32>>, 0>;
libfunc rename<core::option::Option::<core::NonZero::<core::integer::u32>>> = rename<core::option::Option::<core::NonZero::<core::integer::u32>>>;
libfunc u64_is_zero = u64_is_zero;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u64>>, 1> = enum_init<core::option::Option::<core::NonZero::<core::integer::u64>>, 1>;
libfunc store_temp<core::option::Option::<core::NonZero::<core::integer::u64>>> = store_temp<core::option::Option::<core::NonZero::<core::integer::u64>>>;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u64>>, 0> = enum_init<core::option::Option::<core::NonZero::<core::integer::u64>>, 0>;
libfunc rename<core::option::Option::<core::NonZero::<core::integer::u64>>> = rename<core::option::Option::<core::NonZero::<core::integer::u64>>>;
libfunc u128_is_zero = u128_is_zero;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u128>>, 1> = enum_init<core::option::Option::<core::NonZero::<core::integer::u128>>, 1>;
libfunc store_temp<core::option::Option::<core::NonZero::<core::integer::u128>>> = store_temp<core::option::Option::<core::NonZero::<core::integer::u128>>>;
libfunc enum_init<core::option::Option::<core::NonZero::<core::integer::u128>>, 0> = enum_init<core::option::Option::<core::NonZero::<core::integer::u128>>, 0>;
libfunc rename<core::option::Option::<core::NonZero::<core::integer::u128>>> = rename<core::option::Option::<core::NonZero::<core::integer::u128>>>;

u8_const<0>() -> ([1]);
u8_const<0>() -> ([2]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<u8>([1]) -> ([6]);
store_temp<u8>([2]) -> ([7]);
function_call<user@safe_divmod::safe_divmod::u8_divmod>([5], [6], [7]) -> ([3], [4]);
u8_const<0>() -> ([8]);
u8_const<10>() -> ([9]);
store_temp<RangeCheck>([3]) -> ([12]);
store_temp<u8>([8]) -> ([13]);
store_temp<u8>([9]) -> ([14]);
function_call<user@safe_divmod::safe_divmod::u8_divmod>([12], [13], [14]) -> ([10], [11]);
u8_const<0>() -> ([15]);
u8_const<255>() -> ([16]);
store_temp<RangeCheck>([10]) -> ([19]);
store_temp<u8>([15]) -> ([20]);
store_temp<u8>([16]) -> ([21]);
function_call<user@safe_divmod::safe_divmod::u8_divmod>([19], [20], [21]) -> ([17], [18]);
u8_const<10>() -> ([22]);
u8_const<0>() -> ([23]);
store_temp<RangeCheck>([17]) -> ([26]);
store_temp<u8>([22]) -> ([27]);
store_temp<u8>([23]) -> ([28]);
function_call<user@safe_divmod::safe_divmod::u8_divmod>([26], [27], [28]) -> ([24], [25]);
u8_const<10>() -> ([29]);
u8_const<10>() -> ([30]);
store_temp<RangeCheck>([24]) -> ([33]);
store_temp<u8>([29]) -> ([34]);
store_temp<u8>([30]) -> ([35]);
function_call<user@safe_divmod::safe_divmod::u8_divmod>([33], [34], [35]) -> ([31], [32]);
u8_const<10>() -> ([36]);
u8_const<255>() -> ([37]);
store_temp<RangeCheck>([31]) -> ([40]);
store_temp<u8>([36]) -> ([41]);
store_temp<u8>([37]) -> ([42]);
function_call<user@safe_divmod::safe_divmod::u8_divmod>([40], [41], [42]) -> ([38], [39]);
u8_const<255>() -> ([43]);
u8_const<0>() -> ([44]);
store_temp<RangeCheck>([38]) -> ([47]);
store_temp<u8>([43]) -> ([48]);
store_temp<u8>([44]) -> ([49]);
function_call<user@safe_divmod::safe_divmod::u8_divmod>([47], [48], [49]) -> ([45], [46]);
u8_const<255>() -> ([50]);
u8_const<10>() -> ([51]);
store_temp<RangeCheck>([45]) -> ([54]);
store_temp<u8>([50]) -> ([55]);
store_temp<u8>([51]) -> ([56]);
function_call<user@safe_divmod::safe_divmod::u8_divmod>([54], [55], [56]) -> ([52], [53]);
u8_const<255>() -> ([57]);
u8_const<255>() -> ([58]);
store_temp<RangeCheck>([52]) -> ([61]);
store_temp<u8>([57]) -> ([62]);
store_temp<u8>([58]) -> ([63]);
function_call<user@safe_divmod::safe_divmod::u8_divmod>([61], [62], [63]) -> ([59], [60]);
u16_const<0>() -> ([64]);
u16_const<0>() -> ([65]);
store_temp<RangeCheck>([59]) -> ([68]);
store_temp<u16>([64]) -> ([69]);
store_temp<u16>([65]) -> ([70]);
function_call<user@safe_divmod::safe_divmod::u16_divmod>([68], [69], [70]) -> ([66], [67]);
u16_const<0>() -> ([71]);
u16_const<1000>() -> ([72]);
store_temp<RangeCheck>([66]) -> ([75]);
store_temp<u16>([71]) -> ([76]);
store_temp<u16>([72]) -> ([77]);
function_call<user@safe_divmod::safe_divmod::u16_divmod>([75], [76], [77]) -> ([73], [74]);
u16_const<0>() -> ([78]);
u16_const<65535>() -> ([79]);
store_temp<RangeCheck>([73]) -> ([82]);
store_temp<u16>([78]) -> ([83]);
store_temp<u16>([79]) -> ([84]);
function_call<user@safe_divmod::safe_divmod::u16_divmod>([82], [83], [84]) -> ([80], [81]);
u16_const<1000>() -> ([85]);
u16_const<0>() -> ([86]);
store_temp<RangeCheck>([80]) -> ([89]);
store_temp<u16>([85]) -> ([90]);
store_temp<u16>([86]) -> ([91]);
function_call<user@safe_divmod::safe_divmod::u16_divmod>([89], [90], [91]) -> ([87], [88]);
u16_const<1000>() -> ([92]);
u16_const<1000>() -> ([93]);
store_temp<RangeCheck>([87]) -> ([96]);
store_temp<u16>([92]) -> ([97]);
store_temp<u16>([93]) -> ([98]);
function_call<user@safe_divmod::safe_divmod::u16_divmod>([96], [97], [98]) -> ([94], [95]);
u16_const<1000>() -> ([99]);
u16_const<65535>() -> ([100]);
store_temp<RangeCheck>([94]) -> ([103]);
store_temp<u16>([99]) -> ([104]);
store_temp<u16>([100]) -> ([105]);
function_call<user@safe_divmod::safe_divmod::u16_divmod>([103], [104], [105]) -> ([101], [102]);
u16_const<65535>() -> ([106]);
u16_const<0>() -> ([107]);
store_temp<RangeCheck>([101]) -> ([110]);
store_temp<u16>([106]) -> ([111]);
store_temp<u16>([107]) -> ([112]);
function_call<user@safe_divmod::safe_divmod::u16_divmod>([110], [111], [112]) -> ([108], [109]);
u16_const<65535>() -> ([113]);
u16_const<10>() -> ([114]);
store_temp<RangeCheck>([108]) -> ([117]);
store_temp<u16>([113]) -> ([118]);
store_temp<u16>([114]) -> ([119]);
function_call<user@safe_divmod::safe_divmod::u16_divmod>([117], [118], [119]) -> ([115], [116]);
u16_const<65535>() -> ([120]);
u16_const<65535>() -> ([121]);
store_temp<RangeCheck>([115]) -> ([124]);
store_temp<u16>([120]) -> ([125]);
store_temp<u16>([121]) -> ([126]);
function_call<user@safe_divmod::safe_divmod::u16_divmod>([124], [125], [126]) -> ([122], [123]);
u32_const<0>() -> ([127]);
u32_const<0>() -> ([128]);
store_temp<RangeCheck>([122]) -> ([131]);
store_temp<u32>([127]) -> ([132]);
store_temp<u32>([128]) -> ([133]);
function_call<user@safe_divmod::safe_divmod::u32_divmod>([131], [132], [133]) -> ([129], [130]);
u32_const<0>() -> ([134]);
u32_const<100000>() -> ([135]);
store_temp<RangeCheck>([129]) -> ([138]);
store_temp<u32>([134]) -> ([139]);
store_temp<u32>([135]) -> ([140]);
function_call<user@safe_divmod::safe_divmod::u32_divmod>([138], [139], [140]) -> ([136], [137]);
u32_const<0>() -> ([141]);
u32_const<4294967295>() -> ([142]);
store_temp<RangeCheck>([136]) -> ([145]);
store_temp<u32>([141]) -> ([146]);
store_temp<u32>([142]) -> ([147]);
function_call<user@safe_divmod::safe_divmod::u32_divmod>([145], [146], [147]) -> ([143], [144]);
u32_const<100000>() -> ([148]);
u32_const<0>() -> ([149]);
store_temp<RangeCheck>([143]) -> ([152]);
store_temp<u32>([148]) -> ([153]);
store_temp<u32>([149]) -> ([154]);
function_call<user@safe_divmod::safe_divmod::u32_divmod>([152], [153], [154]) -> ([150], [151]);
u32_const<100000>() -> ([155]);
u32_const<100000>() -> ([156]);
store_temp<RangeCheck>([150]) -> ([159]);
store_temp<u32>([155]) -> ([160]);
store_temp<u32>([156]) -> ([161]);
function_call<user@safe_divmod::safe_divmod::u32_divmod>([159], [160], [161]) -> ([157], [158]);
u32_const<100000>() -> ([162]);
u32_const<4294967295>() -> ([163]);
store_temp<RangeCheck>([157]) -> ([166]);
store_temp<u32>([162]) -> ([167]);
store_temp<u32>([163]) -> ([168]);
function_call<user@safe_divmod::safe_divmod::u32_divmod>([166], [167], [168]) -> ([164], [165]);
u32_const<4294967295>() -> ([169]);
u32_const<0>() -> ([170]);
store_temp<RangeCheck>([164]) -> ([173]);
store_temp<u32>([169]) -> ([174]);
store_temp<u32>([170]) -> ([175]);
function_call<user@safe_divmod::safe_divmod::u32_divmod>([173], [174], [175]) -> ([171], [172]);
u32_const<4294967295>() -> ([176]);
u32_const<10>() -> ([177]);
store_temp<RangeCheck>([171]) -> ([180]);
store_temp<u32>([176]) -> ([181]);
store_temp<u32>([177]) -> ([182]);
function_call<user@safe_divmod::safe_divmod::u32_divmod>([180], [181], [182]) -> ([178], [179]);
u32_const<4294967295>() -> ([183]);
u32_const<4294967295>() -> ([184]);
store_temp<RangeCheck>([178]) -> ([187]);
store_temp<u32>([183]) -> ([188]);
store_temp<u32>([184]) -> ([189]);
function_call<user@safe_divmod::safe_divmod::u32_divmod>([187], [188], [189]) -> ([185], [186]);
u64_const<0>() -> ([190]);
u64_const<0>() -> ([191]);
store_temp<RangeCheck>([185]) -> ([194]);
store_temp<u64>([190]) -> ([195]);
store_temp<u64>([191]) -> ([196]);
function_call<user@safe_divmod::safe_divmod::u64_divmod>([194], [195], [196]) -> ([192], [193]);
u64_const<0>() -> ([197]);
u64_const<10000000000>() -> ([198]);
store_temp<RangeCheck>([192]) -> ([201]);
store_temp<u64>([197]) -> ([202]);
store_temp<u64>([198]) -> ([203]);
function_call<user@safe_divmod::safe_divmod::u64_divmod>([201], [202], [203]) -> ([199], [200]);
u64_const<0>() -> ([204]);
u64_const<18446744073709551615>() -> ([205]);
store_temp<RangeCheck>([199]) -> ([208]);
store_temp<u64>([204]) -> ([209]);
store_temp<u64>([205]) -> ([210]);
function_call<user@safe_divmod::safe_divmod::u64_divmod>([208], [209], [210]) -> ([206], [207]);
u64_const<10000000000>() -> ([211]);
u64_const<0>() -> ([212]);
store_temp<RangeCheck>([206]) -> ([215]);
store_temp<u64>([211]) -> ([216]);
store_temp<u64>([212]) -> ([217]);
function_call<user@safe_divmod::safe_divmod::u64_divmod>([215], [216], [217]) -> ([213], [214]);
u64_const<10000000000>() -> ([218]);
u64_const<10000000000>() -> ([219]);
store_temp<RangeCheck>([213]) -> ([222]);
store_temp<u64>([218]) -> ([223]);
store_temp<u64>([219]) -> ([224]);
function_call<user@safe_divmod::safe_divmod::u64_divmod>([222], [223], [224]) -> ([220], [221]);
u64_const<10000000000>() -> ([225]);
u64_const<18446744073709551615>() -> ([226]);
store_temp<RangeCheck>([220]) -> ([229]);
store_temp<u64>([225]) -> ([230]);
store_temp<u64>([226]) -> ([231]);
function_call<user@safe_divmod::safe_divmod::u64_divmod>([229], [230], [231]) -> ([227], [228]);
u64_const<18446744073709551615>() -> ([232]);
u64_const<0>() -> ([233]);
store_temp<RangeCheck>([227]) -> ([236]);
store_temp<u64>([232]) -> ([237]);
store_temp<u64>([233]) -> ([238]);
function_call<user@safe_divmod::safe_divmod::u64_divmod>([236], [237], [238]) -> ([234], [235]);
u64_const<18446744073709551615>() -> ([239]);
u64_const<10>() -> ([240]);
store_temp<RangeCheck>([234]) -> ([243]);
store_temp<u64>([239]) -> ([244]);
store_temp<u64>([240]) -> ([245]);
function_call<user@safe_divmod::safe_divmod::u64_divmod>([243], [244], [245]) -> ([241], [242]);
u64_const<18446744073709551615>() -> ([246]);
u64_const<18446744073709551615>() -> ([247]);
store_temp<RangeCheck>([241]) -> ([250]);
store_temp<u64>([246]) -> ([251]);
store_temp<u64>([247]) -> ([252]);
function_call<user@safe_divmod::safe_divmod::u64_divmod>([250], [251], [252]) -> ([248], [249]);
u128_const<0>() -> ([253]);
u128_const<0>() -> ([254]);
store_temp<RangeCheck>([248]) -> ([257]);
store_temp<u128>([253]) -> ([258]);
store_temp<u128>([254]) -> ([259]);
function_call<user@safe_divmod::safe_divmod::u128_divmod>([257], [258], [259]) -> ([255], [256]);
u128_const<0>() -> ([260]);
u128_const<100000000000000000000>() -> ([261]);
store_temp<RangeCheck>([255]) -> ([264]);
store_temp<u128>([260]) -> ([265]);
store_temp<u128>([261]) -> ([266]);
function_call<user@safe_divmod::safe_divmod::u128_divmod>([264], [265], [266]) -> ([262], [263]);
u128_const<0>() -> ([267]);
u128_const<340282366920938463463374607431768211455>() -> ([268]);
store_temp<RangeCheck>([262]) -> ([271]);
store_temp<u128>([267]) -> ([272]);
store_temp<u128>([268]) -> ([273]);
function_call<user@safe_divmod::safe_divmod::u128_divmod>([271], [272], [273]) -> ([269], [270]);
u128_const<100000000000000000000>() -> ([274]);
u128_const<0>() -> ([275]);
store_temp<RangeCheck>([269]) -> ([278]);
store_temp<u128>([274]) -> ([279]);
store_temp<u128>([275]) -> ([280]);
function_call<user@safe_divmod::safe_divmod::u128_divmod>([278], [279], [280]) -> ([276], [277]);
u128_const<100000000000000000000>() -> ([281]);
u128_const<100000000000000000000>() -> ([282]);
store_temp<RangeCheck>([276]) -> ([285]);
store_temp<u128>([281]) -> ([286]);
store_temp<u128>([282]) -> ([287]);
function_call<user@safe_divmod::safe_divmod::u128_divmod>([285], [286], [287]) -> ([283], [284]);
u128_const<100000000000000000000>() -> ([288]);
u128_const<340282366920938463463374607431768211455>() -> ([289]);
store_temp<RangeCheck>([283]) -> ([292]);
store_temp<u128>([288]) -> ([293]);
store_temp<u128>([289]) -> ([294]);
function_call<user@safe_divmod::safe_divmod::u128_divmod>([292], [293], [294]) -> ([290], [291]);
u128_const<340282366920938463463374607431768211455>() -> ([295]);
u128_const<0>() -> ([296]);
store_temp<RangeCheck>([290]) -> ([299]);
store_temp<u128>([295]) -> ([300]);
store_temp<u128>([296]) -> ([301]);
function_call<user@safe_divmod::safe_divmod::u128_divmod>([299], [300], [301]) -> ([297], [298]);
u128_const<340282366920938463463374607431768211455>() -> ([302]);
u128_const<10>() -> ([303]);
store_temp<RangeCheck>([297]) -> ([306]);
store_temp<u128>([302]) -> ([307]);
store_temp<u128>([303]) -> ([308]);
function_call<user@safe_divmod::safe_divmod::u128_divmod>([306], [307], [308]) -> ([304], [305]);
u128_const<340282366920938463463374607431768211455>() -> ([309]);
u128_const<340282366920938463463374607431768211455>() -> ([310]);
store_temp<RangeCheck>([304]) -> ([313]);
store_temp<u128>([309]) -> ([314]);
store_temp<u128>([310]) -> ([315]);
function_call<user@safe_divmod::safe_divmod::u128_divmod>([313], [314], [315]) -> ([311], [312]);
struct_construct<Tuple<Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>>>([4], [11], [18], [25], [32], [39], [46], [53], [60], [67], [74], [81], [88], [95], [102], [109], [116], [123], [130], [137], [144], [151], [158], [165], [172], [179], [186], [193], [200], [207], [214], [221], [228], [235], [242], [249], [256], [263], [270], [277], [284], [291], [298], [305], [312]) -> ([316]);
store_temp<RangeCheck>([311]) -> ([317]);
store_temp<Tuple<Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>>>([316]) -> ([318]);
return([317], [318]);
store_temp<u8>([2]) -> ([4]);
function_call<user@core::integer::u8_try_as_non_zero>([4]) -> ([3]);
enum_match<core::option::Option::<core::NonZero::<core::integer::u8>>>([3]) { fallthrough([5]) 285([6]) };
branch_align() -> ();
u8_safe_divmod([0], [1], [5]) -> ([7], [8], [9]);
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
struct_construct<Tuple<u8, u8, core::bool>>([8], [9], [11]) -> ([12]);
store_temp<RangeCheck>([7]) -> ([13]);
store_temp<Tuple<u8, u8, core::bool>>([12]) -> ([14]);
jump() { 295() };
branch_align() -> ();
drop<u8>([1]) -> ();
struct_deconstruct<Unit>([6]) -> ();
u8_const<0>() -> ([15]);
u8_const<0>() -> ([16]);
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 0>([17]) -> ([18]);
struct_construct<Tuple<u8, u8, core::bool>>([15], [16], [18]) -> ([19]);
store_temp<RangeCheck>([0]) -> ([13]);
store_temp<Tuple<u8, u8, core::bool>>([19]) -> ([14]);
rename<RangeCheck>([13]) -> ([20]);
rename<Tuple<u8, u8, core::bool>>([14]) -> ([21]);
return([20], [21]);
store_temp<u16>([2]) -> ([4]);
function_call<user@core::integer::u16_try_as_non_zero>([4]) -> ([3]);
enum_match<core::option::Option::<core::NonZero::<core::integer::u16>>>([3]) { fallthrough([5]) 309([6]) };
branch_align() -> ();
u16_safe_divmod([0], [1], [5]) -> ([7], [8], [9]);
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
struct_construct<Tuple<u16, u16, core::bool>>([8], [9], [11]) -> ([12]);
store_temp<RangeCheck>([7]) -> ([13]);
store_temp<Tuple<u16, u16, core::bool>>([12]) -> ([14]);
jump() { 319() };
branch_align() -> ();
drop<u16>([1]) -> ();
struct_deconstruct<Unit>([6]) -> ();
u16_const<0>() -> ([15]);
u16_const<0>() -> ([16]);
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 0>([17]) -> ([18]);
struct_construct<Tuple<u16, u16, core::bool>>([15], [16], [18]) -> ([19]);
store_temp<RangeCheck>([0]) -> ([13]);
store_temp<Tuple<u16, u16, core::bool>>([19]) -> ([14]);
rename<RangeCheck>([13]) -> ([20]);
rename<Tuple<u16, u16, core::bool>>([14]) -> ([21]);
return([20], [21]);
store_temp<u32>([2]) -> ([4]);
function_call<user@core::integer::u32_try_as_non_zero>([4]) -> ([3]);
enum_match<core::option::Option::<core::NonZero::<core::integer::u32>>>([3]) { fallthrough([5]) 333([6]) };
branch_align() -> ();
u32_safe_divmod([0], [1], [5]) -> ([7], [8], [9]);
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
struct_construct<Tuple<u32, u32, core::bool>>([8], [9], [11]) -> ([12]);
store_temp<RangeCheck>([7]) -> ([13]);
store_temp<Tuple<u32, u32, core::bool>>([12]) -> ([14]);
jump() { 343() };
branch_align() -> ();
drop<u32>([1]) -> ();
struct_deconstruct<Unit>([6]) -> ();
u32_const<0>() -> ([15]);
u32_const<0>() -> ([16]);
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 0>([17]) -> ([18]);
struct_construct<Tuple<u32, u32, core::bool>>([15], [16], [18]) -> ([19]);
store_temp<RangeCheck>([0]) -> ([13]);
store_temp<Tuple<u32, u32, core::bool>>([19]) -> ([14]);
rename<RangeCheck>([13]) -> ([20]);
rename<Tuple<u32, u32, core::bool>>([14]) -> ([21]);
return([20], [21]);
store_temp<u64>([2]) -> ([4]);
function_call<user@core::integer::u64_try_as_non_zero>([4]) -> ([3]);
enum_match<core::option::Option::<core::NonZero::<core::integer::u64>>>([3]) { fallthrough([5]) 357([6]) };
branch_align() -> ();
u64_safe_divmod([0], [1], [5]) -> ([7], [8], [9]);
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
struct_construct<Tuple<u64, u64, core::bool>>([8], [9], [11]) -> ([12]);
store_temp<RangeCheck>([7]) -> ([13]);
store_temp<Tuple<u64, u64, core::bool>>([12]) -> ([14]);
jump() { 367() };
branch_align() -> ();
drop<u64>([1]) -> ();
struct_deconstruct<Unit>([6]) -> ();
u64_const<0>() -> ([15]);
u64_const<0>() -> ([16]);
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 0>([17]) -> ([18]);
struct_construct<Tuple<u64, u64, core::bool>>([15], [16], [18]) -> ([19]);
store_temp<RangeCheck>([0]) -> ([13]);
store_temp<Tuple<u64, u64, core::bool>>([19]) -> ([14]);
rename<RangeCheck>([13]) -> ([20]);
rename<Tuple<u64, u64, core::bool>>([14]) -> ([21]);
return([20], [21]);
store_temp<u128>([2]) -> ([4]);
function_call<user@core::integer::u128_try_as_non_zero>([4]) -> ([3]);
enum_match<core::option::Option::<core::NonZero::<core::integer::u128>>>([3]) { fallthrough([5]) 381([6]) };
branch_align() -> ();
u128_safe_divmod([0], [1], [5]) -> ([7], [8], [9]);
struct_construct<Unit>() -> ([10]);
enum_init<core::bool, 1>([10]) -> ([11]);
struct_construct<Tuple<u128, u128, core::bool>>([8], [9], [11]) -> ([12]);
store_temp<RangeCheck>([7]) -> ([13]);
store_temp<Tuple<u128, u128, core::bool>>([12]) -> ([14]);
jump() { 391() };
branch_align() -> ();
drop<u128>([1]) -> ();
struct_deconstruct<Unit>([6]) -> ();
u128_const<0>() -> ([15]);
u128_const<0>() -> ([16]);
struct_construct<Unit>() -> ([17]);
enum_init<core::bool, 0>([17]) -> ([18]);
struct_construct<Tuple<u128, u128, core::bool>>([15], [16], [18]) -> ([19]);
store_temp<RangeCheck>([0]) -> ([13]);
store_temp<Tuple<u128, u128, core::bool>>([19]) -> ([14]);
rename<RangeCheck>([13]) -> ([20]);
rename<Tuple<u128, u128, core::bool>>([14]) -> ([21]);
return([20], [21]);
u8_is_zero([0]) { fallthrough() 400([1]) };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::option::Option::<core::NonZero::<core::integer::u8>>, 1>([2]) -> ([3]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u8>>>([3]) -> ([4]);
jump() { 403() };
branch_align() -> ();
enum_init<core::option::Option::<core::NonZero::<core::integer::u8>>, 0>([1]) -> ([5]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u8>>>([5]) -> ([4]);
rename<core::option::Option::<core::NonZero::<core::integer::u8>>>([4]) -> ([6]);
return([6]);
u16_is_zero([0]) { fallthrough() 411([1]) };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::option::Option::<core::NonZero::<core::integer::u16>>, 1>([2]) -> ([3]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u16>>>([3]) -> ([4]);
jump() { 414() };
branch_align() -> ();
enum_init<core::option::Option::<core::NonZero::<core::integer::u16>>, 0>([1]) -> ([5]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u16>>>([5]) -> ([4]);
rename<core::option::Option::<core::NonZero::<core::integer::u16>>>([4]) -> ([6]);
return([6]);
u32_is_zero([0]) { fallthrough() 422([1]) };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::option::Option::<core::NonZero::<core::integer::u32>>, 1>([2]) -> ([3]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u32>>>([3]) -> ([4]);
jump() { 425() };
branch_align() -> ();
enum_init<core::option::Option::<core::NonZero::<core::integer::u32>>, 0>([1]) -> ([5]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u32>>>([5]) -> ([4]);
rename<core::option::Option::<core::NonZero::<core::integer::u32>>>([4]) -> ([6]);
return([6]);
u64_is_zero([0]) { fallthrough() 433([1]) };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::option::Option::<core::NonZero::<core::integer::u64>>, 1>([2]) -> ([3]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u64>>>([3]) -> ([4]);
jump() { 436() };
branch_align() -> ();
enum_init<core::option::Option::<core::NonZero::<core::integer::u64>>, 0>([1]) -> ([5]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u64>>>([5]) -> ([4]);
rename<core::option::Option::<core::NonZero::<core::integer::u64>>>([4]) -> ([6]);
return([6]);
u128_is_zero([0]) { fallthrough() 444([1]) };
branch_align() -> ();
struct_construct<Unit>() -> ([2]);
enum_init<core::option::Option::<core::NonZero::<core::integer::u128>>, 1>([2]) -> ([3]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u128>>>([3]) -> ([4]);
jump() { 447() };
branch_align() -> ();
enum_init<core::option::Option::<core::NonZero::<core::integer::u128>>, 0>([1]) -> ([5]);
store_temp<core::option::Option::<core::NonZero::<core::integer::u128>>>([5]) -> ([4]);
rename<core::option::Option::<core::NonZero::<core::integer::u128>>>([4]) -> ([6]);
return([6]);

safe_divmod::safe_divmod::main@0([0]: RangeCheck) -> (RangeCheck, Tuple<Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u8, u8, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u16, u16, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u32, u32, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u64, u64, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>, Tuple<u128, u128, core::bool>>);
safe_divmod::safe_divmod::u8_divmod@274([0]: RangeCheck, [1]: u8, [2]: u8) -> (RangeCheck, Tuple<u8, u8, core::bool>);
safe_divmod::safe_divmod::u16_divmod@298([0]: RangeCheck, [1]: u16, [2]: u16) -> (RangeCheck, Tuple<u16, u16, core::bool>);
safe_divmod::safe_divmod::u32_divmod@322([0]: RangeCheck, [1]: u32, [2]: u32) -> (RangeCheck, Tuple<u32, u32, core::bool>);
safe_divmod::safe_divmod::u64_divmod@346([0]: RangeCheck, [1]: u64, [2]: u64) -> (RangeCheck, Tuple<u64, u64, core::bool>);
safe_divmod::safe_divmod::u128_divmod@370([0]: RangeCheck, [1]: u128, [2]: u128) -> (RangeCheck, Tuple<u128, u128, core::bool>);
core::integer::u8_try_as_non_zero@394([0]: u8) -> (core::option::Option::<core::NonZero::<core::integer::u8>>);
core::integer::u16_try_as_non_zero@405([0]: u16) -> (core::option::Option::<core::NonZero::<core::integer::u16>>);
core::integer::u32_try_as_non_zero@416([0]: u32) -> (core::option::Option::<core::NonZero::<core::integer::u32>>);
core::integer::u64_try_as_non_zero@427([0]: u64) -> (core::option::Option::<core::NonZero::<core::integer::u64>>);
core::integer::u128_try_as_non_zero@438([0]: u128) -> (core::option::Option::<core::NonZero::<core::integer::u128>>);
