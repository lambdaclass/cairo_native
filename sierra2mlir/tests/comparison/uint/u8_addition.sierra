type u8 = u8;
type RangeCheck = RangeCheck;
type Tuple<u8> = Struct<ut@Tuple, u8>;
type felt252 = felt252;
type Array<felt252> = Array<felt252>;
type core::PanicResult::<(core::integer::u8,)> = Enum<ut@core::PanicResult::<(core::integer::u8,)>, Tuple<u8>, Array<felt252>>;
type Tuple<u8, u8, u8> = Struct<ut@Tuple, u8, u8, u8>;
type Tuple<Tuple<u8, u8, u8>> = Struct<ut@Tuple, Tuple<u8, u8, u8>>;
type core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)> = Enum<ut@core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>, Tuple<Tuple<u8, u8, u8>>, Array<felt252>>;
type core::result::Result::<core::integer::u8, core::integer::u8> = Enum<ut@core::result::Result::<core::integer::u8, core::integer::u8>, u8, u8>;
type Unit = Struct<ut@Tuple>;

libfunc u8_const<0> = u8_const<0>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc function_call<user@core::integer::U8Add::add> = function_call<user@core::integer::U8Add::add>;
libfunc enum_match<core::PanicResult::<(core::integer::u8,)>> = enum_match<core::PanicResult::<(core::integer::u8,)>>;
libfunc branch_align = branch_align;
libfunc struct_deconstruct<Tuple<u8>> = struct_deconstruct<Tuple<u8>>;
libfunc u8_const<10> = u8_const<10>;
libfunc struct_construct<Tuple<u8, u8, u8>> = struct_construct<Tuple<u8, u8, u8>>;
libfunc struct_construct<Tuple<Tuple<u8, u8, u8>>> = struct_construct<Tuple<Tuple<u8, u8, u8>>>;
libfunc enum_init<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>, 0> = enum_init<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>, 0>;
libfunc store_temp<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>> = store_temp<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>>;
libfunc drop<u8> = drop<u8>;
libfunc enum_init<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>, 1> = enum_init<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>, 1>;
libfunc u8_overflowing_add = u8_overflowing_add;
libfunc enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 0> = enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 0>;
libfunc store_temp<core::result::Result::<core::integer::u8, core::integer::u8>> = store_temp<core::result::Result::<core::integer::u8, core::integer::u8>>;
libfunc jump = jump;
libfunc enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 1> = enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 1>;
libfunc felt252_const<608642104203229548495787928534675319> = felt252_const<608642104203229548495787928534675319>;
libfunc rename<core::result::Result::<core::integer::u8, core::integer::u8>> = rename<core::result::Result::<core::integer::u8, core::integer::u8>>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc function_call<user@core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>> = function_call<user@core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>>;
libfunc struct_construct<Tuple<u8>> = struct_construct<Tuple<u8>>;
libfunc enum_init<core::PanicResult::<(core::integer::u8,)>, 0> = enum_init<core::PanicResult::<(core::integer::u8,)>, 0>;
libfunc store_temp<core::PanicResult::<(core::integer::u8,)>> = store_temp<core::PanicResult::<(core::integer::u8,)>>;
libfunc enum_init<core::PanicResult::<(core::integer::u8,)>, 1> = enum_init<core::PanicResult::<(core::integer::u8,)>, 1>;
libfunc enum_match<core::result::Result::<core::integer::u8, core::integer::u8>> = enum_match<core::result::Result::<core::integer::u8, core::integer::u8>>;
libfunc drop<felt252> = drop<felt252>;
libfunc array_new<felt252> = array_new<felt252>;
libfunc array_append<felt252> = array_append<felt252>;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc drop<Unit> = drop<Unit>;

u8_const<0>() -> ([1]);
u8_const<0>() -> ([2]);
store_temp<RangeCheck>([0]) -> ([5]);
store_temp<u8>([1]) -> ([6]);
store_temp<u8>([2]) -> ([7]);
function_call<user@core::integer::U8Add::add>([5], [6], [7]) -> ([3], [4]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([4]) { fallthrough([8]) 46([9]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([8]) -> ([10]);
u8_const<0>() -> ([11]);
u8_const<10>() -> ([12]);
store_temp<RangeCheck>([3]) -> ([15]);
store_temp<u8>([11]) -> ([16]);
store_temp<u8>([12]) -> ([17]);
function_call<user@core::integer::U8Add::add>([15], [16], [17]) -> ([13], [14]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([14]) { fallthrough([18]) 40([19]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([18]) -> ([20]);
u8_const<10>() -> ([21]);
u8_const<0>() -> ([22]);
store_temp<RangeCheck>([13]) -> ([25]);
store_temp<u8>([21]) -> ([26]);
store_temp<u8>([22]) -> ([27]);
function_call<user@core::integer::U8Add::add>([25], [26], [27]) -> ([23], [24]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([24]) { fallthrough([28]) 33([29]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([28]) -> ([30]);
struct_construct<Tuple<u8, u8, u8>>([10], [20], [30]) -> ([31]);
struct_construct<Tuple<Tuple<u8, u8, u8>>>([31]) -> ([32]);
enum_init<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>, 0>([32]) -> ([33]);
store_temp<RangeCheck>([23]) -> ([34]);
store_temp<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>>([33]) -> ([35]);
return([34], [35]);
branch_align() -> ();
drop<u8>([10]) -> ();
drop<u8>([20]) -> ();
enum_init<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>, 1>([29]) -> ([36]);
store_temp<RangeCheck>([23]) -> ([37]);
store_temp<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>>([36]) -> ([38]);
return([37], [38]);
branch_align() -> ();
drop<u8>([10]) -> ();
enum_init<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>, 1>([19]) -> ([39]);
store_temp<RangeCheck>([13]) -> ([40]);
store_temp<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>>([39]) -> ([41]);
return([40], [41]);
branch_align() -> ();
enum_init<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>, 1>([9]) -> ([42]);
store_temp<RangeCheck>([3]) -> ([43]);
store_temp<core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>>([42]) -> ([44]);
return([43], [44]);
u8_overflowing_add([0], [1], [2]) { fallthrough([3], [4]) 57([5], [6]) };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 0>([4]) -> ([7]);
store_temp<RangeCheck>([3]) -> ([8]);
store_temp<core::result::Result::<core::integer::u8, core::integer::u8>>([7]) -> ([9]);
jump() { 61() };
branch_align() -> ();
enum_init<core::result::Result::<core::integer::u8, core::integer::u8>, 1>([6]) -> ([10]);
store_temp<RangeCheck>([5]) -> ([8]);
store_temp<core::result::Result::<core::integer::u8, core::integer::u8>>([10]) -> ([9]);
felt252_const<608642104203229548495787928534675319>() -> ([11]);
rename<core::result::Result::<core::integer::u8, core::integer::u8>>([9]) -> ([13]);
store_temp<felt252>([11]) -> ([14]);
function_call<user@core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>>([13], [14]) -> ([12]);
enum_match<core::PanicResult::<(core::integer::u8,)>>([12]) { fallthrough([15]) 73([16]) };
branch_align() -> ();
struct_deconstruct<Tuple<u8>>([15]) -> ([17]);
struct_construct<Tuple<u8>>([17]) -> ([18]);
enum_init<core::PanicResult::<(core::integer::u8,)>, 0>([18]) -> ([19]);
store_temp<RangeCheck>([8]) -> ([20]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([19]) -> ([21]);
return([20], [21]);
branch_align() -> ();
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([16]) -> ([22]);
store_temp<RangeCheck>([8]) -> ([23]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([22]) -> ([24]);
return([23], [24]);
enum_match<core::result::Result::<core::integer::u8, core::integer::u8>>([0]) { fallthrough([2]) 85([3]) };
branch_align() -> ();
drop<felt252>([1]) -> ();
struct_construct<Tuple<u8>>([2]) -> ([4]);
enum_init<core::PanicResult::<(core::integer::u8,)>, 0>([4]) -> ([5]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([5]) -> ([6]);
return([6]);
branch_align() -> ();
drop<u8>([3]) -> ();
array_new<felt252>() -> ([7]);
array_append<felt252>([7], [1]) -> ([8]);
struct_construct<Unit>() -> ([9]);
drop<Unit>([9]) -> ();
enum_init<core::PanicResult::<(core::integer::u8,)>, 1>([8]) -> ([10]);
store_temp<core::PanicResult::<(core::integer::u8,)>>([10]) -> ([11]);
return([11]);

u8_addition::u8_addition::main@0([0]: RangeCheck) -> (RangeCheck, core::PanicResult::<((core::integer::u8, core::integer::u8, core::integer::u8),)>);
core::integer::U8Add::add@51([0]: RangeCheck, [1]: u8, [2]: u8) -> (RangeCheck, core::PanicResult::<(core::integer::u8,)>);
core::result::ResultTraitImpl::<core::integer::u8, core::integer::u8>::expect::<core::integer::u8Drop>@78([0]: core::result::Result::<core::integer::u8, core::integer::u8>, [1]: felt252) -> (core::PanicResult::<(core::integer::u8,)>);
