type felt252 = felt252;
type Pedersen = Pedersen;
type Tuple<felt252, felt252, felt252> = Struct<ut@Tuple, felt252, felt252, felt252>;

libfunc felt252_const<1> = felt252_const<1>;
libfunc felt252_const<2> = felt252_const<2>;
libfunc store_temp<felt252> = store_temp<felt252>;
libfunc pedersen = pedersen;
libfunc felt252_const<3> = felt252_const<3>;
libfunc felt252_const<4> = felt252_const<4>;
libfunc felt252_const<5> = felt252_const<5>;
libfunc felt252_const<6> = felt252_const<6>;
libfunc struct_construct<Tuple<felt252, felt252, felt252>> = struct_construct<Tuple<felt252, felt252, felt252>>;
libfunc store_temp<Pedersen> = store_temp<Pedersen>;
libfunc store_temp<Tuple<felt252, felt252, felt252>> = store_temp<Tuple<felt252, felt252, felt252>>;

felt252_const<1>() -> ([1]);
felt252_const<2>() -> ([2]);
store_temp<felt252>([1]) -> ([1]);
store_temp<felt252>([2]) -> ([2]);
pedersen([0], [1], [2]) -> ([3], [4]);
felt252_const<3>() -> ([5]);
felt252_const<4>() -> ([6]);
store_temp<felt252>([5]) -> ([5]);
store_temp<felt252>([6]) -> ([6]);
pedersen([3], [5], [6]) -> ([7], [8]);
felt252_const<5>() -> ([9]);
felt252_const<6>() -> ([10]);
store_temp<felt252>([9]) -> ([9]);
store_temp<felt252>([10]) -> ([10]);
pedersen([7], [9], [10]) -> ([11], [12]);
struct_construct<Tuple<felt252, felt252, felt252>>([4], [8], [12]) -> ([13]);
store_temp<Pedersen>([11]) -> ([14]);
store_temp<Tuple<felt252, felt252, felt252>>([13]) -> ([15]);
return([14], [15]);

pedersen::pedersen::main@0([0]: Pedersen) -> (Pedersen, Tuple<felt252, felt252, felt252>);
