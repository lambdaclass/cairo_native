name: Bench

on:
  pull_request:
    branches: [main]
  merge_group:
    types: [checks_requested]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  bench-hyperfine:
    name: Hyperfine
    runs-on: ubuntu-24.04
    env:
      CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
    steps:
      - uses: actions/checkout@v4
      - name: check and free hdd space left
        run: |
          echo "Listing 20 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 20
          df -h
          sudo apt-get update
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^temurin-.*'
          sudo apt-get remove -y azure-cli microsoft-edge-stable google-chrome-stable firefox mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          # deleting 15GB
          sudo rm -rf /usr/share/dotnet/
          sudo rm -rf /usr/local/lib/android
          df -h
      - uses: dtolnay/rust-toolchain@nightly
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: add llvm deb repository
        uses: myci-actions/add-deb-repo@11
        with:
          repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
          repo-name: llvm-repo
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
      - name: Install LLVM
        run: sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools
      - name: Install hyperfine
        uses: taiki-e/install-action@v2
        with:
          tool: hyperfine@1.18
      - name: Install deps
        run: make deps
      - name: Run benchmarks
        run: make bench
      - name: Create markdown file
        run: bash .github/scripts/merge-benches.sh

      - name: Find Bench Comment
        continue-on-error: true
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Benchmarking
      - name: Create or update bench comment
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: bench-hyperfine.md
          edit-mode: replace

  run-bench-head:
    env:
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
      RUST_LOG: cairo_native=debug,cairo_native_test=debug
    name: Run benches for HEAD
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout HEAD commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: check and free hdd space left
        run: |
          echo "Listing 20 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 20
          df -h
          sudo apt-get update
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^temurin-.*'
          sudo apt-get remove -y azure-cli microsoft-edge-stable google-chrome-stable firefox mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          # deleting 15GB
          sudo rm -rf /usr/share/dotnet/
          sudo rm -rf /usr/local/lib/android
          df -h

      - name: Install Rust Nightly
        uses: dtolnay/rust-toolchain@nightly

      - name: add llvm deb repository
        uses: myci-actions/add-deb-repo@11
        with:
          repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
          repo-name: llvm-repo
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key

      - name: Install LLVM
        run: sudo apt-get update && sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools

      - name: Install Hyperfine
        uses: taiki-e/install-action@v2
        with:
          tool: hyperfine@1.16

      - name: Build Cairo Native
        run: |
          make build

      - name: Run Program
        run: |
          make deps
          mkdir bench-results-head
          cp programs/benches/*.cairo bench-results-head
          for f in bench-results-head/*.cairo; do
            hyperfine \
            --show-output \
            --export-markdown "${f%.*}.md" \
            --export-json "${f%.*}.json" \
            --warmup 3 \
            -n "head $(basename $f) (JIT)" "./target/release/cairo-native-run --run-mode=jit -s $f --opt-level 3 --available-gas 18446744073709551615" \
            -n "head $(basename $f) (AOT)" "./target/release/cairo-native-run --run-mode=aot -s $f --opt-level 3 --available-gas 18446744073709551615" \
            >> /dev/stderr
          done

      - name: Upload benches
        uses: actions/upload-artifact@v4
        with:
          name: results-head
          path: bench-results-head

  run-bench-base:
    env:
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
      RUST_LOG: cairo_native=debug,cairo_native_test=debug
    name: Run benches for BASE
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout BASE commit
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }}

      - name: check and free hdd space left
        run: |
          echo "Listing 20 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 20
          df -h
          sudo apt-get update
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^temurin-.*'
          sudo apt-get remove -y azure-cli microsoft-edge-stable google-chrome-stable firefox mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          # deleting 15GB
          sudo rm -rf /usr/share/dotnet/
          sudo rm -rf /usr/local/lib/android
          df -h

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@1.83.0

      - name: Install Rust Nightly
        uses: dtolnay/rust-toolchain@nighlty

      - name: add llvm deb repository
        uses: myci-actions/add-deb-repo@11
        with:
          repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-19 main
          repo-name: llvm-repo
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key

      - name: Install LLVM
        run: sudo apt-get update && sudo apt-get install llvm-19 llvm-19-dev llvm-19-runtime clang-19 clang-tools-19 lld-19 libpolly-19-dev libmlir-19-dev mlir-19-tools

      - name: Install Hyperfine
        uses: taiki-e/install-action@v2
        with:
          tool: hyperfine@1.16

      - name: Build Cairo Native
        run: |
          make build

      - name: Run Program
        run: |
          make deps
          mkdir bench-results-base
          cp programs/benches/*.cairo bench-results-base
          for f in bench-results-base/*.cairo; do
            hyperfine \
            --show-output \
            --export-markdown "${f%.*}.md" \
            --export-json "${f%.*}.json" \
            --warmup 3 \
            -n "base $(basename $f) (JIT)" "./target/release/cairo-native-run --run-mode=jit -s $f --opt-level 3 --available-gas 18446744073709551615" \
            -n "base $(basename $f) (AOT)" "./target/release/cairo-native-run --run-mode=aot -s $f --opt-level 3 --available-gas 18446744073709551615" \
            >> /dev/stderr
          done

      - name: Upload benches
        uses: actions/upload-artifact@v4
        with:
          name: results-base
          path: bench-results-base

  show-outputs:
    name: Print Bench Results
    runs-on: ubuntu-24.04
    needs: [ run-bench-head, run-bench-base ]
    steps:
    - name: Fetch Base Result
      uses: actions/download-artifact@v4
      with:
          name: results-base
          path: bench-results-base

    - name: Fetch Head Result
      uses: actions/download-artifact@v4
      with:
          name: results-head
          path: bench-results-head

    - name: Print tables
      run: |
        {
          echo "${bold}Benchmark results Main vs HEAD.${normal}"
          for f in bench-results-base/*.md; do
            echo
            cat $f
            cat bench-results-head/$(basename $f)
          done
        } | tee -a comment_body.md

    - name: Find Bench Comment
      continue-on-error: true
      uses: peter-evans/find-comment@v3
      id: fc
      with:
        issue-number: ${{ github.event.pull_request.number }}
        comment-author: "github-actions[bot]"
        body-includes: Benchmark results Main vs HEAD

    - name: Create or update bench comment
      continue-on-error: true
      uses: peter-evans/create-or-update-comment@v4
      with:
        comment-id: ${{ steps.fc.outputs.comment-id }}
        issue-number: ${{ github.event.pull_request.number }}
        body-path: comment_body.md
        edit-mode: replace
