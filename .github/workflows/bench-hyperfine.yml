name: Bench

on:
  pull_request:
    branches: [main]
  merge_group:
    types: [checks_requested]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always

jobs:
  bench-hyperfine:
    name: Hyperfine
    runs-on: ubuntu-latest
    env:
      CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
      MLIR_SYS_180_PREFIX: /usr/lib/llvm-18/
      TABLEGEN_180_PREFIX: /usr/lib/llvm-18/
      LLVM_SYS_181_PREFIX: /usr/lib/llvm-18/
    steps:
      - uses: actions/checkout@v4
      - name: check and free hdd space left
        run: |
          echo "Listing 20 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 20
          df -h
          sudo apt-get update
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^temurin-.*'
          sudo apt-get remove -y azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox powershell mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          # deleting 15GB
          sudo rm -rf /usr/share/dotnet/
          sudo rm -rf /usr/local/lib/android
          df -h
      - uses: dtolnay/rust-toolchain@1.81.0
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: add llvm deb repository
        uses: myci-actions/add-deb-repo@11
        with:
          repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main
          repo-name: llvm-repo
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
      - name: Install LLVM
        run: sudo apt-get install llvm-18 llvm-18-dev llvm-18-runtime clang-18 clang-tools-18 lld-18 libpolly-18-dev libmlir-18-dev mlir-18-tools
      - name: Install hyperfine
        uses: taiki-e/install-action@v2
        with:
          tool: hyperfine@1.16
      - name: Install deps
        run: make deps
      - name: Build project
        run: make build
      - name: Build runtime subproject
        run: make runtime-ci
      - name: Run benchmarks
        run: ./scripts/bench-hyperfine.sh programs/benches/*.cairo
      - name: Create markdown file
        run: bash .github/scripts/merge-benches.sh

      - name: Find Bench Comment
        continue-on-error: true
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Benchmarking
      - name: Create or update bench comment
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: bench-hyperfine.md
          edit-mode: replace
  
  build-binaries:
    env:
      MLIR_SYS_180_PREFIX: /usr/lib/llvm-18/
      LLVM_SYS_181_PREFIX: /usr/lib/llvm-18/
      TABLEGEN_180_PREFIX: /usr/lib/llvm-18/
      RUST_LOG: cairo_native=debug,cairo_native_test=debug
    strategy:
      matrix:
        branch: [ base ]
    name: Build cairo-native-run for ${{ matrix.branch }}
    runs-on: ubuntu-latest
    steps:
      - name: Cache binary
        uses: actions/cache@v3
        id: cache-binary 
        with:
          path: |
            bin/cairo-native-run-${{ matrix.branch }}
            bin/libcairo-native-runtime-${{ matrix.branch }}.a
          key: binary-${{ github.event.pull_request[matrix.branch].sha }} 
      
      - name: check and free hdd space left
        run: |
          echo "Listing 20 largest packages"
          dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n | tail -n 20
          df -h
          sudo apt-get update
          sudo apt-get remove -y '^llvm-.*'
          sudo apt-get remove -y 'php.*'
          sudo apt-get remove -y '^dotnet-.*'
          sudo apt-get remove -y '^temurin-.*'
          sudo apt-get remove -y azure-cli google-cloud-cli microsoft-edge-stable google-chrome-stable firefox powershell mono-devel
          sudo apt-get autoremove -y
          sudo apt-get clean
          df -h
          echo "Removing large directories"
          # deleting 15GB
          sudo rm -rf /usr/share/dotnet/
          sudo rm -rf /usr/local/lib/android
          df -h

      - name: Install Rust
        if: ${{ steps.cache-binary.outputs.cache-hit != 'true' || steps.cache-library.outputs.cache-hit != 'true' }}
        uses: dtolnay/rust-toolchain@1.81.0
          
      - name: add llvm deb repository
        if: ${{ steps.cache-binary.outputs.cache-hit != 'true' || steps.cache-library.outputs.cache-hit != 'true' }}
        uses: myci-actions/add-deb-repo@11
        with:
          repo: deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-18 main
          repo-name: llvm-repo
          keys-asc: https://apt.llvm.org/llvm-snapshot.gpg.key
      
      - name: Install LLVM
        if: ${{ steps.cache-binary.outputs.cache-hit != 'true' || steps.cache-library.outputs.cache-hit != 'true' }}
        run: sudo apt-get update && sudo apt-get install llvm-18 llvm-18-dev llvm-18-runtime clang-18 clang-tools-18 lld-18 libpolly-18-dev libmlir-18-dev mlir-18-tools

      - name: Checkout base commit
        if: ${{ steps.cache-binary.outputs.cache-hit != 'true' || steps.cache-library.outputs.cache-hit != 'true' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request[matrix.branch].sha }}
        
      - name: Fetch Rust cache
        if: ${{ steps.cache-binary.outputs.cache-hit != 'true' }}
        uses: Swatinem/rust-cache@v2
      
      - name: Build binary
        if: ${{ steps.cache-binary.outputs.cache-hit != 'true' }}
        run: |
          make build
          mkdir bin
          cp target/release/cairo-native-run bin/cairo-native-run-${{ matrix.branch }}
          cp target/release/libcairo_native_runtime.a bin/libcairo-native-runtime-${{ matrix.branch }}.a
  
  hyperfine-prs:
    name: Bench PR (linux, amd64)
    needs: [ build-binaries ]
    runs-on: ubuntu-latest
    env:
      PROGRAM: fib_2M
      OUTPUT_DIR: bench-outputs
    steps:
      - uses: actions/checkout@v4

      - name: Install Hyperfine
        uses: taiki-e/install-action@v2
        with:
          tool: hyperfine@1.16

      - name: Fetch base binary
        uses: actions/cache/restore@v3
        with:
          path: |
            bin/cairo-native-run-base
            bin/libcairo-native-runtime-base
          key: binary-${{ github.event.pull_request.base.sha }}
    
      - name: Fetch HEAD binary
        uses: actions/cache/restore@v3
        with:
          path: |
            bin/cairo-native-run-head
            bin/libcairo-native-runtime-head
          key: binary-${{ github.event.pull_request.head.sha }}

      - name: Build Dependencies
        run: make deps

      - name: Run Program
        run: |
          BINS="base"
          cp programs/benches/$PROGRAM.cairo .
          mkdir $OUTPUT_DIR
          hyperfine \
          --export-markdown "$OUTPUT_DIR/$PROGRAM.md" \
          --export-json "$OUTPUT_DIR/$PROGRAM.json" \
          --warmup 3 \
          -L bin "$BINS" \
          --prepare "export CAIRO_NATIVE_RUNTIME_LIBRARY=bin/libcairo-native-runtime-base.a" \
          --show-output \
          -n "{bin} $PROGRAM (JIT)" "./bin/cairo-native-run-{bin} --run-mode=jit -s $PROGRAM.cairo --opt-level 3 --available-gas 18446744073709551615" \
          -n "{bin} $PROGRAM (AOT)" "./bin/cairo-native-run-{bin} --run-mode=aot -s $PROGRAM.cairo --opt-level 3 --available-gas 18446744073709551615" \
          >> /dev/stderr

      - name: Print tables
        run: |
          {
            echo "Benchmark results base v head"
            echo
            cat $OUTPUT_DIR/$PROGRAM.md
          } | tee -a comment_body.md

      - name: Find Bench Comment
        continue-on-error: true
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Benchmarking
          
      - name: Create or update bench comment
        continue-on-error: true
        uses: peter-evans/create-or-update-comment@v4
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body-path: comment_body.md
          edit-mode: replace
