name: Daily Block Run

on:
  schedule:
    # At the end of every day
    - cron: "0 0 * * *"

env:
  RANGE_SIZE: 10

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      LLVM_SYS_191_PREFIX: /usr/lib/llvm-19/
      MLIR_SYS_190_PREFIX: /usr/lib/llvm-19/
      TABLEGEN_190_PREFIX: /usr/lib/llvm-19/
      RPC_ENDPOINT_TESTNET: ${{ secrets.RPC_ENDPOINT_TESTNET }}
      RPC_ENDPOINT_MAINNET: ${{ secrets.RPC_ENDPOINT_MAINNET }}
    strategy:
      matrix:
        block:
          - 740000
          - 741000
          - 741050
          - 741100
          - 741150
          - 741200
          - 741250
          - 741300
          - 741350
          - 742000
          - 742050
          - 742100
          - 742150
          - 742200
          - 742250
          - 742300
          - 742350
          - 743000
          - 743050
          - 743100
          - 743150
          - 743200
          - 743250
          - 743300
          - 743350
          - 744000
          - 744050
          - 744100
          - 744150
          - 744200
          - 744250
          - 744300
          - 744350
          - 745000
          - 745050
          - 745100
          - 745150
          - 745200
          - 745250
          - 745300
          - 745350
          - 746000
          - 746050
          - 746100
          - 746150
          - 746200
          - 746250
          - 746300
          - 746350
          - 747000
          - 747050
          - 747100
          - 747150
          - 747200
          - 747250
          - 747300
          - 747350
          - 748000
          - 748050
          - 748100
          - 748150
          - 748200
          - 748250
          - 748300
          - 748350
          - 749000
          - 749050
          - 749100
          - 749150
          - 749200
          - 800000
          - 800050
          - 800100
          - 800150
          - 800200
          - 800250
          - 800300
          - 800350
          - 800400
          - 800450
          - 800500
          - 800550
          - 800600
          - 800650
          - 800700
          - 800750
          - 800800
          - 800850
          - 800900
          - 800950
          - 900000
          - 900100
          - 900200
          - 900300
          - 900400
          - 900500
          - 900600
          - 900700
          - 900800
          - 900900
        runner:
          - native
          - vm
      fail-fast: false
    defaults:
      run:
        shell: bash
        working-directory: ./starknet-replay

    steps:
      # We checkout replay first, as it's the main repository for this workflow
      - name: Checkout Replay
        uses: actions/checkout@v4
        with:
          repository: lambdaclass/starknet-replay
          path: starknet-replay
      # We need native for building the runtime
      - name: Checkout Native
        uses: actions/checkout@v4
        with:
          path: cairo_native

      # Install dependencies
      - uses: ./cairo_native/.github/actions/install-linux-deps
      - name: Setup rust env
        uses: dtolnay/rust-toolchain@1.82.0
      - name: Retreive cached dependecies
        uses: Swatinem/rust-cache@v2
      - name: Build Cairo Native Runtime Library
        shell: bash
        run: |
          cd ../cairo_native
          make runtime
          echo "CAIRO_NATIVE_RUNTIME_LIBRARY=$(pwd)/libcairo_native_runtime.a" > $GITHUB_ENV

      - name: Patch dependencies
        run: |
          # Patches native dependency to local path, to use current cairo native version
          echo -e "\n[patch.crates-io]\ncairo-native = { path = \"../cairo_native\" }" >> Cargo.toml

      - name: Run with Native
        if: ${{ matrix.runner == 'native' }}
        run: |
          BLOCK_START=${{ matrix.block }}
          BLOCK_END=$(($BLOCK_START + $RANGE_SIZE - 1))
          cargo run --release --features state_dump block-range $BLOCK_START $BLOCK_END mainnet
      - name: Run with VM
        if: ${{ matrix.runner == 'vm' }}
        run: |
          BLOCK_START=${{ matrix.block }}
          BLOCK_END=$(($BLOCK_START + $RANGE_SIZE - 1))
          cargo run --release --features state_dump,only_cairo_vm block-range $BLOCK_START $BLOCK_END mainnet

      # We always upload the dump, even if the job fails
      - name: Upload dumps
        uses: actions/upload-artifact@v4
        if: ${{ always() }}
        with:
          name: dump-${{matrix.block}}-${{matrix.runner}}
          path: starknet-replay/state_dumps/${{matrix.runner}}

  compare:
    needs: [run]
    runs-on: ubuntu-latest
    # We always run the compare job, to ensure that a single run job failing
    # would not cancel the whole comparison.
    if: ${{ always() }}
    strategy:
      matrix:
        block:
          - 740000
          - 741000
          - 741050
          - 741100
          - 741150
          - 741200
          - 741250
          - 741300
          - 741350
          - 742000
          - 742050
          - 742100
          - 742150
          - 742200
          - 742250
          - 742300
          - 742350
          - 743000
          - 743050
          - 743100
          - 743150
          - 743200
          - 743250
          - 743300
          - 743350
          - 744000
          - 744050
          - 744100
          - 744150
          - 744200
          - 744250
          - 744300
          - 744350
          - 745000
          - 745050
          - 745100
          - 745150
          - 745200
          - 745250
          - 745300
          - 745350
          - 746000
          - 746050
          - 746100
          - 746150
          - 746200
          - 746250
          - 746300
          - 746350
          - 747000
          - 747050
          - 747100
          - 747150
          - 747200
          - 747250
          - 747300
          - 747350
          - 748000
          - 748050
          - 748100
          - 748150
          - 748200
          - 748250
          - 748300
          - 748350
          - 749000
          - 749050
          - 749100
          - 749150
          - 749200
          - 800000
          - 800050
          - 800100
          - 800150
          - 800200
          - 800250
          - 800300
          - 800350
          - 800400
          - 800450
          - 800500
          - 800550
          - 800600
          - 800650
          - 800700
          - 800750
          - 800800
          - 800850
          - 800900
          - 800950
          - 900000
          - 900100
          - 900200
          - 900300
          - 900400
          - 900500
          - 900600
          - 900700
          - 900800
          - 900900
      fail-fast: false
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4

      - name: Fetch Native dumps
        uses: actions/download-artifact@v4
        with:
          name: dump-${{matrix.block}}-native
          path: state_dumps/native
        continue-on-error: true
      - name: Fetch VM dumps
        uses: actions/download-artifact@v4
        with:
          name: dump-${{matrix.block}}-vm
          path: state_dumps/vm
        continue-on-error: true

      - name: Compare states
        run: |
          ./scripts/cmp_state_dumps.sh | tee output

      - name: Prepare env vars
        if: ${{ always() }}
        run: |
          # Save blocks to env var
          BLOCK_START=${{ matrix.block }}
          BLOCK_END=$(($BLOCK_START + $RANGE_SIZE - 1))
          echo "BLOCK_END=$BLOCK_END" | tee -a $GITHUB_ENV
          echo "BLOCK_START=$BLOCK_START" | tee -a $GITHUB_ENV

          # Save workflow url
          REPO_URL="${{ github.server_url }}/${{ github.repository }}"
          echo "WORKFLOW_URL=$REPO_URL/actions/runs/${{ github.run_id }}" | tee -a $GITHUB_ENV

          # Save output
          {
            echo 'OUTPUT<<EOF'
            cat output
            echo EOF
          } >> "$GITHUB_ENV"

      - name: Create Issue
        if: ${{ failure() }}
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_SHA: ${{ github.sha }}
        with:
          filename: .github/ISSUE_TEMPLATE/daily_failure.md
