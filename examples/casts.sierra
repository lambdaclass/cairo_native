type u8 = u8;
type u16 = u16;
type u32 = u32;
type u64 = u64;
type u128 = u128;
type RangeCheck = RangeCheck;
type Unit = Struct<ut@Tuple>;
type core::option::Option::<core::integer::u8> = Enum<ut@core::option::Option::<core::integer::u8>, u8, Unit>;
type core::option::Option::<core::integer::u16> = Enum<ut@core::option::Option::<core::integer::u16>, u16, Unit>;
type core::option::Option::<core::integer::u32> = Enum<ut@core::option::Option::<core::integer::u32>, u32, Unit>;
type core::option::Option::<core::integer::u64> = Enum<ut@core::option::Option::<core::integer::u64>, u64, Unit>;
type core::option::Option::<core::integer::u128> = Enum<ut@core::option::Option::<core::integer::u128>, u128, Unit>;

libfunc u8_const<0> = u8_const<0>;
libfunc u16_const<0> = u16_const<0>;
libfunc u32_const<0> = u32_const<0>;
libfunc u64_const<0> = u64_const<0>;
libfunc u128_const<0> = u128_const<0>;
libfunc store_temp<u8> = store_temp<u8>;
libfunc dup<u8> = dup<u8>;
libfunc upcast<u8, u8> = upcast<u8, u8>;
libfunc drop<u8> = drop<u8>;
libfunc upcast<u8, u16> = upcast<u8, u16>;
libfunc drop<u16> = drop<u16>;
libfunc upcast<u8, u32> = upcast<u8, u32>;
libfunc drop<u32> = drop<u32>;
libfunc upcast<u8, u64> = upcast<u8, u64>;
libfunc drop<u64> = drop<u64>;
libfunc upcast<u8, u128> = upcast<u8, u128>;
libfunc drop<u128> = drop<u128>;
libfunc store_temp<u16> = store_temp<u16>;
libfunc dup<u16> = dup<u16>;
libfunc upcast<u16, u16> = upcast<u16, u16>;
libfunc upcast<u16, u32> = upcast<u16, u32>;
libfunc upcast<u16, u64> = upcast<u16, u64>;
libfunc upcast<u16, u128> = upcast<u16, u128>;
libfunc store_temp<u32> = store_temp<u32>;
libfunc dup<u32> = dup<u32>;
libfunc upcast<u32, u32> = upcast<u32, u32>;
libfunc upcast<u32, u64> = upcast<u32, u64>;
libfunc upcast<u32, u128> = upcast<u32, u128>;
libfunc store_temp<u64> = store_temp<u64>;
libfunc dup<u64> = dup<u64>;
libfunc upcast<u64, u64> = upcast<u64, u64>;
libfunc upcast<u64, u128> = upcast<u64, u128>;
libfunc store_temp<u128> = store_temp<u128>;
libfunc dup<u128> = dup<u128>;
libfunc upcast<u128, u128> = upcast<u128, u128>;
libfunc downcast<u8, u8> = downcast<u8, u8>;
libfunc branch_align = branch_align;
libfunc enum_init<core::option::Option::<core::integer::u8>, 0> = enum_init<core::option::Option::<core::integer::u8>, 0>;
libfunc drop<core::option::Option::<core::integer::u8>> = drop<core::option::Option::<core::integer::u8>>;
libfunc store_temp<RangeCheck> = store_temp<RangeCheck>;
libfunc jump = jump;
libfunc struct_construct<Unit> = struct_construct<Unit>;
libfunc enum_init<core::option::Option::<core::integer::u8>, 1> = enum_init<core::option::Option::<core::integer::u8>, 1>;
libfunc downcast<u16, u8> = downcast<u16, u8>;
libfunc downcast<u16, u16> = downcast<u16, u16>;
libfunc enum_init<core::option::Option::<core::integer::u16>, 0> = enum_init<core::option::Option::<core::integer::u16>, 0>;
libfunc drop<core::option::Option::<core::integer::u16>> = drop<core::option::Option::<core::integer::u16>>;
libfunc enum_init<core::option::Option::<core::integer::u16>, 1> = enum_init<core::option::Option::<core::integer::u16>, 1>;
libfunc downcast<u32, u8> = downcast<u32, u8>;
libfunc downcast<u32, u16> = downcast<u32, u16>;
libfunc downcast<u32, u32> = downcast<u32, u32>;
libfunc enum_init<core::option::Option::<core::integer::u32>, 0> = enum_init<core::option::Option::<core::integer::u32>, 0>;
libfunc drop<core::option::Option::<core::integer::u32>> = drop<core::option::Option::<core::integer::u32>>;
libfunc enum_init<core::option::Option::<core::integer::u32>, 1> = enum_init<core::option::Option::<core::integer::u32>, 1>;
libfunc downcast<u64, u8> = downcast<u64, u8>;
libfunc downcast<u64, u16> = downcast<u64, u16>;
libfunc downcast<u64, u32> = downcast<u64, u32>;
libfunc downcast<u64, u64> = downcast<u64, u64>;
libfunc enum_init<core::option::Option::<core::integer::u64>, 0> = enum_init<core::option::Option::<core::integer::u64>, 0>;
libfunc drop<core::option::Option::<core::integer::u64>> = drop<core::option::Option::<core::integer::u64>>;
libfunc enum_init<core::option::Option::<core::integer::u64>, 1> = enum_init<core::option::Option::<core::integer::u64>, 1>;
libfunc downcast<u128, u8> = downcast<u128, u8>;
libfunc downcast<u128, u16> = downcast<u128, u16>;
libfunc downcast<u128, u32> = downcast<u128, u32>;
libfunc downcast<u128, u64> = downcast<u128, u64>;
libfunc downcast<u128, u128> = downcast<u128, u128>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 0> = enum_init<core::option::Option::<core::integer::u128>, 0>;
libfunc drop<core::option::Option::<core::integer::u128>> = drop<core::option::Option::<core::integer::u128>>;
libfunc enum_init<core::option::Option::<core::integer::u128>, 1> = enum_init<core::option::Option::<core::integer::u128>, 1>;
libfunc rename<RangeCheck> = rename<RangeCheck>;
libfunc store_temp<Unit> = store_temp<Unit>;

u8_const<0>() -> ([1]);
u16_const<0>() -> ([2]);
u32_const<0>() -> ([3]);
u64_const<0>() -> ([4]);
u128_const<0>() -> ([5]);
store_temp<u8>([1]) -> ([1]);
dup<u8>([1]) -> ([1], [7]);
upcast<u8, u8>([7]) -> ([6]);
drop<u8>([6]) -> ();
dup<u8>([1]) -> ([1], [9]);
upcast<u8, u16>([9]) -> ([8]);
drop<u16>([8]) -> ();
dup<u8>([1]) -> ([1], [11]);
upcast<u8, u32>([11]) -> ([10]);
drop<u32>([10]) -> ();
dup<u8>([1]) -> ([1], [13]);
upcast<u8, u64>([13]) -> ([12]);
drop<u64>([12]) -> ();
dup<u8>([1]) -> ([1], [15]);
upcast<u8, u128>([15]) -> ([14]);
drop<u128>([14]) -> ();
store_temp<u16>([2]) -> ([2]);
dup<u16>([2]) -> ([2], [17]);
upcast<u16, u16>([17]) -> ([16]);
drop<u16>([16]) -> ();
dup<u16>([2]) -> ([2], [19]);
upcast<u16, u32>([19]) -> ([18]);
drop<u32>([18]) -> ();
dup<u16>([2]) -> ([2], [21]);
upcast<u16, u64>([21]) -> ([20]);
drop<u64>([20]) -> ();
dup<u16>([2]) -> ([2], [23]);
upcast<u16, u128>([23]) -> ([22]);
drop<u128>([22]) -> ();
store_temp<u32>([3]) -> ([3]);
dup<u32>([3]) -> ([3], [25]);
upcast<u32, u32>([25]) -> ([24]);
drop<u32>([24]) -> ();
dup<u32>([3]) -> ([3], [27]);
upcast<u32, u64>([27]) -> ([26]);
drop<u64>([26]) -> ();
dup<u32>([3]) -> ([3], [29]);
upcast<u32, u128>([29]) -> ([28]);
drop<u128>([28]) -> ();
store_temp<u64>([4]) -> ([4]);
dup<u64>([4]) -> ([4], [31]);
upcast<u64, u64>([31]) -> ([30]);
drop<u64>([30]) -> ();
dup<u64>([4]) -> ([4], [33]);
upcast<u64, u128>([33]) -> ([32]);
drop<u128>([32]) -> ();
store_temp<u128>([5]) -> ([5]);
dup<u128>([5]) -> ([5], [35]);
upcast<u128, u128>([35]) -> ([34]);
drop<u128>([34]) -> ();
downcast<u8, u8>([0], [1]) { fallthrough([36], [37]) 61([38]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([37]) -> ([39]);
drop<core::option::Option::<core::integer::u8>>([39]) -> ();
store_temp<RangeCheck>([36]) -> ([40]);
jump() { 66() };
branch_align() -> ();
struct_construct<Unit>() -> ([41]);
enum_init<core::option::Option::<core::integer::u8>, 1>([41]) -> ([42]);
drop<core::option::Option::<core::integer::u8>>([42]) -> ();
store_temp<RangeCheck>([38]) -> ([40]);
dup<u16>([2]) -> ([2], [46]);
downcast<u16, u8>([40], [46]) { fallthrough([43], [44]) 73([45]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([44]) -> ([47]);
drop<core::option::Option::<core::integer::u8>>([47]) -> ();
store_temp<RangeCheck>([43]) -> ([48]);
jump() { 78() };
branch_align() -> ();
struct_construct<Unit>() -> ([49]);
enum_init<core::option::Option::<core::integer::u8>, 1>([49]) -> ([50]);
drop<core::option::Option::<core::integer::u8>>([50]) -> ();
store_temp<RangeCheck>([45]) -> ([48]);
downcast<u16, u16>([48], [2]) { fallthrough([51], [52]) 84([53]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u16>, 0>([52]) -> ([54]);
drop<core::option::Option::<core::integer::u16>>([54]) -> ();
store_temp<RangeCheck>([51]) -> ([55]);
jump() { 89() };
branch_align() -> ();
struct_construct<Unit>() -> ([56]);
enum_init<core::option::Option::<core::integer::u16>, 1>([56]) -> ([57]);
drop<core::option::Option::<core::integer::u16>>([57]) -> ();
store_temp<RangeCheck>([53]) -> ([55]);
dup<u32>([3]) -> ([3], [61]);
downcast<u32, u8>([55], [61]) { fallthrough([58], [59]) 96([60]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([59]) -> ([62]);
drop<core::option::Option::<core::integer::u8>>([62]) -> ();
store_temp<RangeCheck>([58]) -> ([63]);
jump() { 101() };
branch_align() -> ();
struct_construct<Unit>() -> ([64]);
enum_init<core::option::Option::<core::integer::u8>, 1>([64]) -> ([65]);
drop<core::option::Option::<core::integer::u8>>([65]) -> ();
store_temp<RangeCheck>([60]) -> ([63]);
dup<u32>([3]) -> ([3], [69]);
downcast<u32, u16>([63], [69]) { fallthrough([66], [67]) 108([68]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u16>, 0>([67]) -> ([70]);
drop<core::option::Option::<core::integer::u16>>([70]) -> ();
store_temp<RangeCheck>([66]) -> ([71]);
jump() { 113() };
branch_align() -> ();
struct_construct<Unit>() -> ([72]);
enum_init<core::option::Option::<core::integer::u16>, 1>([72]) -> ([73]);
drop<core::option::Option::<core::integer::u16>>([73]) -> ();
store_temp<RangeCheck>([68]) -> ([71]);
downcast<u32, u32>([71], [3]) { fallthrough([74], [75]) 119([76]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u32>, 0>([75]) -> ([77]);
drop<core::option::Option::<core::integer::u32>>([77]) -> ();
store_temp<RangeCheck>([74]) -> ([78]);
jump() { 124() };
branch_align() -> ();
struct_construct<Unit>() -> ([79]);
enum_init<core::option::Option::<core::integer::u32>, 1>([79]) -> ([80]);
drop<core::option::Option::<core::integer::u32>>([80]) -> ();
store_temp<RangeCheck>([76]) -> ([78]);
dup<u64>([4]) -> ([4], [84]);
downcast<u64, u8>([78], [84]) { fallthrough([81], [82]) 131([83]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([82]) -> ([85]);
drop<core::option::Option::<core::integer::u8>>([85]) -> ();
store_temp<RangeCheck>([81]) -> ([86]);
jump() { 136() };
branch_align() -> ();
struct_construct<Unit>() -> ([87]);
enum_init<core::option::Option::<core::integer::u8>, 1>([87]) -> ([88]);
drop<core::option::Option::<core::integer::u8>>([88]) -> ();
store_temp<RangeCheck>([83]) -> ([86]);
dup<u64>([4]) -> ([4], [92]);
downcast<u64, u16>([86], [92]) { fallthrough([89], [90]) 143([91]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u16>, 0>([90]) -> ([93]);
drop<core::option::Option::<core::integer::u16>>([93]) -> ();
store_temp<RangeCheck>([89]) -> ([94]);
jump() { 148() };
branch_align() -> ();
struct_construct<Unit>() -> ([95]);
enum_init<core::option::Option::<core::integer::u16>, 1>([95]) -> ([96]);
drop<core::option::Option::<core::integer::u16>>([96]) -> ();
store_temp<RangeCheck>([91]) -> ([94]);
dup<u64>([4]) -> ([4], [100]);
downcast<u64, u32>([94], [100]) { fallthrough([97], [98]) 155([99]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u32>, 0>([98]) -> ([101]);
drop<core::option::Option::<core::integer::u32>>([101]) -> ();
store_temp<RangeCheck>([97]) -> ([102]);
jump() { 160() };
branch_align() -> ();
struct_construct<Unit>() -> ([103]);
enum_init<core::option::Option::<core::integer::u32>, 1>([103]) -> ([104]);
drop<core::option::Option::<core::integer::u32>>([104]) -> ();
store_temp<RangeCheck>([99]) -> ([102]);
downcast<u64, u64>([102], [4]) { fallthrough([105], [106]) 166([107]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u64>, 0>([106]) -> ([108]);
drop<core::option::Option::<core::integer::u64>>([108]) -> ();
store_temp<RangeCheck>([105]) -> ([109]);
jump() { 171() };
branch_align() -> ();
struct_construct<Unit>() -> ([110]);
enum_init<core::option::Option::<core::integer::u64>, 1>([110]) -> ([111]);
drop<core::option::Option::<core::integer::u64>>([111]) -> ();
store_temp<RangeCheck>([107]) -> ([109]);
dup<u128>([5]) -> ([5], [115]);
downcast<u128, u8>([109], [115]) { fallthrough([112], [113]) 178([114]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u8>, 0>([113]) -> ([116]);
drop<core::option::Option::<core::integer::u8>>([116]) -> ();
store_temp<RangeCheck>([112]) -> ([117]);
jump() { 183() };
branch_align() -> ();
struct_construct<Unit>() -> ([118]);
enum_init<core::option::Option::<core::integer::u8>, 1>([118]) -> ([119]);
drop<core::option::Option::<core::integer::u8>>([119]) -> ();
store_temp<RangeCheck>([114]) -> ([117]);
dup<u128>([5]) -> ([5], [123]);
downcast<u128, u16>([117], [123]) { fallthrough([120], [121]) 190([122]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u16>, 0>([121]) -> ([124]);
drop<core::option::Option::<core::integer::u16>>([124]) -> ();
store_temp<RangeCheck>([120]) -> ([125]);
jump() { 195() };
branch_align() -> ();
struct_construct<Unit>() -> ([126]);
enum_init<core::option::Option::<core::integer::u16>, 1>([126]) -> ([127]);
drop<core::option::Option::<core::integer::u16>>([127]) -> ();
store_temp<RangeCheck>([122]) -> ([125]);
dup<u128>([5]) -> ([5], [131]);
downcast<u128, u32>([125], [131]) { fallthrough([128], [129]) 202([130]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u32>, 0>([129]) -> ([132]);
drop<core::option::Option::<core::integer::u32>>([132]) -> ();
store_temp<RangeCheck>([128]) -> ([133]);
jump() { 207() };
branch_align() -> ();
struct_construct<Unit>() -> ([134]);
enum_init<core::option::Option::<core::integer::u32>, 1>([134]) -> ([135]);
drop<core::option::Option::<core::integer::u32>>([135]) -> ();
store_temp<RangeCheck>([130]) -> ([133]);
dup<u128>([5]) -> ([5], [139]);
downcast<u128, u64>([133], [139]) { fallthrough([136], [137]) 214([138]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u64>, 0>([137]) -> ([140]);
drop<core::option::Option::<core::integer::u64>>([140]) -> ();
store_temp<RangeCheck>([136]) -> ([141]);
jump() { 219() };
branch_align() -> ();
struct_construct<Unit>() -> ([142]);
enum_init<core::option::Option::<core::integer::u64>, 1>([142]) -> ([143]);
drop<core::option::Option::<core::integer::u64>>([143]) -> ();
store_temp<RangeCheck>([138]) -> ([141]);
downcast<u128, u128>([141], [5]) { fallthrough([144], [145]) 225([146]) };
branch_align() -> ();
enum_init<core::option::Option::<core::integer::u128>, 0>([145]) -> ([147]);
drop<core::option::Option::<core::integer::u128>>([147]) -> ();
store_temp<RangeCheck>([144]) -> ([148]);
jump() { 230() };
branch_align() -> ();
struct_construct<Unit>() -> ([149]);
enum_init<core::option::Option::<core::integer::u128>, 1>([149]) -> ([150]);
drop<core::option::Option::<core::integer::u128>>([150]) -> ();
store_temp<RangeCheck>([146]) -> ([148]);
struct_construct<Unit>() -> ([151]);
rename<RangeCheck>([148]) -> ([152]);
store_temp<Unit>([151]) -> ([153]);
return([152], [153]);

casts::casts::main@0([0]: RangeCheck) -> (RangeCheck, Unit);
